// Code generated from CLIF.g4 by ANTLR 4.9.3. DO NOT EDIT.

package clif

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 30, 306,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3,
	10, 3, 10, 3, 10, 3, 10, 3, 10, 5, 10, 106, 10, 10, 3, 11, 3, 11, 3, 12,
	3, 12, 3, 13, 3, 13, 3, 14, 6, 14, 115, 10, 14, 13, 14, 14, 14, 116, 3,
	15, 3, 15, 3, 15, 3, 15, 3, 15, 7, 15, 124, 10, 15, 12, 15, 14, 15, 127,
	11, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16,
	7, 16, 138, 10, 16, 12, 16, 14, 16, 141, 11, 16, 3, 16, 3, 16, 3, 17, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 7, 17, 153, 10, 17, 12, 17,
	14, 17, 156, 11, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22,
	3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26,
	3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3,
	27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3,
	29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30,
	3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3,
	31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32,
	3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3,
	33, 3, 33, 7, 33, 272, 10, 33, 12, 33, 14, 33, 275, 11, 33, 3, 34, 3, 34,
	3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 7, 35, 286, 10, 35, 12,
	35, 14, 35, 289, 11, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36,
	3, 36, 3, 36, 7, 36, 300, 10, 36, 12, 36, 14, 36, 303, 11, 36, 3, 36, 3,
	36, 3, 287, 2, 37, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 2, 15, 2, 17, 2,
	19, 2, 21, 2, 23, 2, 25, 2, 27, 8, 29, 9, 31, 10, 33, 11, 35, 12, 37, 13,
	39, 14, 41, 15, 43, 16, 45, 17, 47, 18, 49, 19, 51, 20, 53, 21, 55, 22,
	57, 23, 59, 24, 61, 25, 63, 26, 65, 27, 67, 28, 69, 29, 71, 30, 3, 2, 7,
	7, 2, 35, 35, 37, 40, 44, 65, 67, 93, 95, 128, 3, 2, 50, 59, 5, 2, 50,
	59, 67, 72, 99, 104, 5, 2, 11, 13, 15, 15, 34, 34, 4, 2, 12, 12, 15, 15,
	2, 323, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3,
	2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2,
	39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2,
	2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2,
	2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2,
	2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3,
	2, 2, 2, 2, 71, 3, 2, 2, 2, 3, 73, 3, 2, 2, 2, 5, 75, 3, 2, 2, 2, 7, 77,
	3, 2, 2, 2, 9, 79, 3, 2, 2, 2, 11, 81, 3, 2, 2, 2, 13, 83, 3, 2, 2, 2,
	15, 85, 3, 2, 2, 2, 17, 87, 3, 2, 2, 2, 19, 105, 3, 2, 2, 2, 21, 107, 3,
	2, 2, 2, 23, 109, 3, 2, 2, 2, 25, 111, 3, 2, 2, 2, 27, 114, 3, 2, 2, 2,
	29, 118, 3, 2, 2, 2, 31, 128, 3, 2, 2, 2, 33, 144, 3, 2, 2, 2, 35, 159,
	3, 2, 2, 2, 37, 161, 3, 2, 2, 2, 39, 165, 3, 2, 2, 2, 41, 168, 3, 2, 2,
	2, 43, 172, 3, 2, 2, 2, 45, 175, 3, 2, 2, 2, 47, 182, 3, 2, 2, 2, 49, 189,
	3, 2, 2, 2, 51, 193, 3, 2, 2, 2, 53, 204, 3, 2, 2, 2, 55, 212, 3, 2, 2,
	2, 57, 223, 3, 2, 2, 2, 59, 235, 3, 2, 2, 2, 61, 245, 3, 2, 2, 2, 63, 256,
	3, 2, 2, 2, 65, 266, 3, 2, 2, 2, 67, 276, 3, 2, 2, 2, 69, 280, 3, 2, 2,
	2, 71, 295, 3, 2, 2, 2, 73, 74, 7, 42, 2, 2, 74, 4, 3, 2, 2, 2, 75, 76,
	7, 43, 2, 2, 76, 6, 3, 2, 2, 2, 77, 78, 7, 41, 2, 2, 78, 8, 3, 2, 2, 2,
	79, 80, 7, 36, 2, 2, 80, 10, 3, 2, 2, 2, 81, 82, 7, 94, 2, 2, 82, 12, 3,
	2, 2, 2, 83, 84, 9, 2, 2, 2, 84, 14, 3, 2, 2, 2, 85, 86, 9, 3, 2, 2, 86,
	16, 3, 2, 2, 2, 87, 88, 9, 4, 2, 2, 88, 18, 3, 2, 2, 2, 89, 90, 7, 94,
	2, 2, 90, 91, 7, 119, 2, 2, 91, 92, 5, 17, 9, 2, 92, 93, 5, 17, 9, 2, 93,
	94, 5, 17, 9, 2, 94, 95, 5, 17, 9, 2, 95, 106, 3, 2, 2, 2, 96, 97, 7, 94,
	2, 2, 97, 98, 7, 87, 2, 2, 98, 99, 5, 17, 9, 2, 99, 100, 5, 17, 9, 2, 100,
	101, 5, 17, 9, 2, 101, 102, 5, 17, 9, 2, 102, 103, 5, 17, 9, 2, 103, 104,
	5, 17, 9, 2, 104, 106, 3, 2, 2, 2, 105, 89, 3, 2, 2, 2, 105, 96, 3, 2,
	2, 2, 106, 20, 3, 2, 2, 2, 107, 108, 7, 41, 2, 2, 108, 22, 3, 2, 2, 2,
	109, 110, 7, 36, 2, 2, 110, 24, 3, 2, 2, 2, 111, 112, 7, 94, 2, 2, 112,
	26, 3, 2, 2, 2, 113, 115, 5, 15, 8, 2, 114, 113, 3, 2, 2, 2, 115, 116,
	3, 2, 2, 2, 116, 114, 3, 2, 2, 2, 116, 117, 3, 2, 2, 2, 117, 28, 3, 2,
	2, 2, 118, 119, 7, 48, 2, 2, 119, 120, 7, 48, 2, 2, 120, 121, 7, 48, 2,
	2, 121, 125, 3, 2, 2, 2, 122, 124, 5, 13, 7, 2, 123, 122, 3, 2, 2, 2, 124,
	127, 3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 125, 126, 3, 2, 2, 2, 126, 30, 3,
	2, 2, 2, 127, 125, 3, 2, 2, 2, 128, 139, 5, 7, 4, 2, 129, 138, 5, 67, 34,
	2, 130, 138, 5, 3, 2, 2, 131, 138, 5, 5, 3, 2, 132, 138, 5, 13, 7, 2, 133,
	138, 5, 19, 10, 2, 134, 138, 5, 9, 5, 2, 135, 138, 5, 21, 11, 2, 136, 138,
	5, 25, 13, 2, 137, 129, 3, 2, 2, 2, 137, 130, 3, 2, 2, 2, 137, 131, 3,
	2, 2, 2, 137, 132, 3, 2, 2, 2, 137, 133, 3, 2, 2, 2, 137, 134, 3, 2, 2,
	2, 137, 135, 3, 2, 2, 2, 137, 136, 3, 2, 2, 2, 138, 141, 3, 2, 2, 2, 139,
	137, 3, 2, 2, 2, 139, 140, 3, 2, 2, 2, 140, 142, 3, 2, 2, 2, 141, 139,
	3, 2, 2, 2, 142, 143, 5, 7, 4, 2, 143, 32, 3, 2, 2, 2, 144, 154, 5, 9,
	5, 2, 145, 153, 5, 67, 34, 2, 146, 153, 5, 3, 2, 2, 147, 153, 5, 5, 3,
	2, 148, 153, 5, 13, 7, 2, 149, 153, 5, 19, 10, 2, 150, 153, 5, 7, 4, 2,
	151, 153, 5, 23, 12, 2, 152, 145, 3, 2, 2, 2, 152, 146, 3, 2, 2, 2, 152,
	147, 3, 2, 2, 2, 152, 148, 3, 2, 2, 2, 152, 149, 3, 2, 2, 2, 152, 150,
	3, 2, 2, 2, 152, 151, 3, 2, 2, 2, 153, 156, 3, 2, 2, 2, 154, 152, 3, 2,
	2, 2, 154, 155, 3, 2, 2, 2, 155, 157, 3, 2, 2, 2, 156, 154, 3, 2, 2, 2,
	157, 158, 5, 9, 5, 2, 158, 34, 3, 2, 2, 2, 159, 160, 7, 63, 2, 2, 160,
	36, 3, 2, 2, 2, 161, 162, 7, 99, 2, 2, 162, 163, 7, 112, 2, 2, 163, 164,
	7, 102, 2, 2, 164, 38, 3, 2, 2, 2, 165, 166, 7, 113, 2, 2, 166, 167, 7,
	116, 2, 2, 167, 40, 3, 2, 2, 2, 168, 169, 7, 107, 2, 2, 169, 170, 7, 104,
	2, 2, 170, 171, 7, 104, 2, 2, 171, 42, 3, 2, 2, 2, 172, 173, 7, 107, 2,
	2, 173, 174, 7, 104, 2, 2, 174, 44, 3, 2, 2, 2, 175, 176, 7, 104, 2, 2,
	176, 177, 7, 113, 2, 2, 177, 178, 7, 116, 2, 2, 178, 179, 7, 99, 2, 2,
	179, 180, 7, 110, 2, 2, 180, 181, 7, 110, 2, 2, 181, 46, 3, 2, 2, 2, 182,
	183, 7, 103, 2, 2, 183, 184, 7, 122, 2, 2, 184, 185, 7, 107, 2, 2, 185,
	186, 7, 117, 2, 2, 186, 187, 7, 118, 2, 2, 187, 188, 7, 117, 2, 2, 188,
	48, 3, 2, 2, 2, 189, 190, 7, 112, 2, 2, 190, 191, 7, 113, 2, 2, 191, 192,
	7, 118, 2, 2, 192, 50, 3, 2, 2, 2, 193, 194, 7, 101, 2, 2, 194, 195, 7,
	110, 2, 2, 195, 196, 7, 47, 2, 2, 196, 197, 7, 116, 2, 2, 197, 198, 7,
	113, 2, 2, 198, 199, 7, 110, 2, 2, 199, 200, 7, 103, 2, 2, 200, 201, 7,
	117, 2, 2, 201, 202, 7, 103, 2, 2, 202, 203, 7, 118, 2, 2, 203, 52, 3,
	2, 2, 2, 204, 205, 7, 101, 2, 2, 205, 206, 7, 110, 2, 2, 206, 207, 7, 47,
	2, 2, 207, 208, 7, 118, 2, 2, 208, 209, 7, 103, 2, 2, 209, 210, 7, 122,
	2, 2, 210, 211, 7, 118, 2, 2, 211, 54, 3, 2, 2, 2, 212, 213, 7, 101, 2,
	2, 213, 214, 7, 110, 2, 2, 214, 215, 7, 47, 2, 2, 215, 216, 7, 107, 2,
	2, 216, 217, 7, 111, 2, 2, 217, 218, 7, 114, 2, 2, 218, 219, 7, 113, 2,
	2, 219, 220, 7, 116, 2, 2, 220, 221, 7, 118, 2, 2, 221, 222, 7, 117, 2,
	2, 222, 56, 3, 2, 2, 2, 223, 224, 7, 101, 2, 2, 224, 225, 7, 110, 2, 2,
	225, 226, 7, 47, 2, 2, 226, 227, 7, 103, 2, 2, 227, 228, 7, 122, 2, 2,
	228, 229, 7, 101, 2, 2, 229, 230, 7, 110, 2, 2, 230, 231, 7, 119, 2, 2,
	231, 232, 7, 102, 2, 2, 232, 233, 7, 103, 2, 2, 233, 234, 7, 117, 2, 2,
	234, 58, 3, 2, 2, 2, 235, 236, 7, 101, 2, 2, 236, 237, 7, 110, 2, 2, 237,
	238, 7, 47, 2, 2, 238, 239, 7, 111, 2, 2, 239, 240, 7, 113, 2, 2, 240,
	241, 7, 102, 2, 2, 241, 242, 7, 119, 2, 2, 242, 243, 7, 110, 2, 2, 243,
	244, 7, 103, 2, 2, 244, 60, 3, 2, 2, 2, 245, 246, 7, 101, 2, 2, 246, 247,
	7, 110, 2, 2, 247, 248, 7, 47, 2, 2, 248, 249, 7, 101, 2, 2, 249, 250,
	7, 113, 2, 2, 250, 251, 7, 111, 2, 2, 251, 252, 7, 111, 2, 2, 252, 253,
	7, 103, 2, 2, 253, 254, 7, 112, 2, 2, 254, 255, 7, 118, 2, 2, 255, 62,
	3, 2, 2, 2, 256, 257, 7, 101, 2, 2, 257, 258, 7, 110, 2, 2, 258, 259, 7,
	47, 2, 2, 259, 260, 7, 114, 2, 2, 260, 261, 7, 116, 2, 2, 261, 262, 7,
	103, 2, 2, 262, 263, 7, 104, 2, 2, 263, 264, 7, 107, 2, 2, 264, 265, 7,
	122, 2, 2, 265, 64, 3, 2, 2, 2, 266, 273, 5, 13, 7, 2, 267, 272, 5, 13,
	7, 2, 268, 272, 5, 7, 4, 2, 269, 272, 5, 9, 5, 2, 270, 272, 5, 11, 6, 2,
	271, 267, 3, 2, 2, 2, 271, 268, 3, 2, 2, 2, 271, 269, 3, 2, 2, 2, 271,
	270, 3, 2, 2, 2, 272, 275, 3, 2, 2, 2, 273, 271, 3, 2, 2, 2, 273, 274,
	3, 2, 2, 2, 274, 66, 3, 2, 2, 2, 275, 273, 3, 2, 2, 2, 276, 277, 9, 5,
	2, 2, 277, 278, 3, 2, 2, 2, 278, 279, 8, 34, 2, 2, 279, 68, 3, 2, 2, 2,
	280, 281, 7, 49, 2, 2, 281, 282, 7, 44, 2, 2, 282, 287, 3, 2, 2, 2, 283,
	286, 5, 69, 35, 2, 284, 286, 11, 2, 2, 2, 285, 283, 3, 2, 2, 2, 285, 284,
	3, 2, 2, 2, 286, 289, 3, 2, 2, 2, 287, 288, 3, 2, 2, 2, 287, 285, 3, 2,
	2, 2, 288, 290, 3, 2, 2, 2, 289, 287, 3, 2, 2, 2, 290, 291, 7, 44, 2, 2,
	291, 292, 7, 49, 2, 2, 292, 293, 3, 2, 2, 2, 293, 294, 8, 35, 2, 2, 294,
	70, 3, 2, 2, 2, 295, 296, 7, 49, 2, 2, 296, 297, 7, 49, 2, 2, 297, 301,
	3, 2, 2, 2, 298, 300, 10, 6, 2, 2, 299, 298, 3, 2, 2, 2, 300, 303, 3, 2,
	2, 2, 301, 299, 3, 2, 2, 2, 301, 302, 3, 2, 2, 2, 302, 304, 3, 2, 2, 2,
	303, 301, 3, 2, 2, 2, 304, 305, 8, 36, 2, 2, 305, 72, 3, 2, 2, 2, 15, 2,
	105, 116, 125, 137, 139, 152, 154, 271, 273, 285, 287, 301, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "')'", "'''", "'\"'", "'\\'", "", "", "", "", "'='", "'and'",
	"'or'", "'iff'", "'if'", "'forall'", "'exists'", "'not'", "'cl-roleset'",
	"'cl-text'", "'cl-imports'", "'cl-excludes'", "'cl-module'", "'cl-comment'",
	"'cl-prefix'",
}

var lexerSymbolicNames = []string{
	"", "OPEN", "CLOSE", "STRINGQUOTE", "NAMEQUOTE", "BACKSLASH", "NUMERAL",
	"SEQMARK", "QUOTEDSTRING", "ENCLOSEDNAME", "EQUAL", "AND", "OR", "IFF",
	"IF", "FORALL", "EXISTS", "NOT", "CL_ROLESET", "CL_TEXT", "CL_IMPORTS",
	"CL_EXCLUDES", "CL_MODULE", "CL_COMMENT", "CL_PREFIX", "NAMECHARSEQUENCE",
	"WHITE", "BLOCKCOMMENT", "LineComment",
}

var lexerRuleNames = []string{
	"OPEN", "CLOSE", "STRINGQUOTE", "NAMEQUOTE", "BACKSLASH", "CHAR", "DIGIT",
	"HEXA", "NONASCII", "INNERSTRINGQUOTE", "INNERNAMEQUOTE", "INNERBACKSLASH",
	"NUMERAL", "SEQMARK", "QUOTEDSTRING", "ENCLOSEDNAME", "EQUAL", "AND", "OR",
	"IFF", "IF", "FORALL", "EXISTS", "NOT", "CL_ROLESET", "CL_TEXT", "CL_IMPORTS",
	"CL_EXCLUDES", "CL_MODULE", "CL_COMMENT", "CL_PREFIX", "NAMECHARSEQUENCE",
	"WHITE", "BLOCKCOMMENT", "LineComment",
}

type CLIFLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewCLIFLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *CLIFLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewCLIFLexer(input antlr.CharStream) *CLIFLexer {
	l := new(CLIFLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "CLIF.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CLIFLexer tokens.
const (
	CLIFLexerOPEN             = 1
	CLIFLexerCLOSE            = 2
	CLIFLexerSTRINGQUOTE      = 3
	CLIFLexerNAMEQUOTE        = 4
	CLIFLexerBACKSLASH        = 5
	CLIFLexerNUMERAL          = 6
	CLIFLexerSEQMARK          = 7
	CLIFLexerQUOTEDSTRING     = 8
	CLIFLexerENCLOSEDNAME     = 9
	CLIFLexerEQUAL            = 10
	CLIFLexerAND              = 11
	CLIFLexerOR               = 12
	CLIFLexerIFF              = 13
	CLIFLexerIF               = 14
	CLIFLexerFORALL           = 15
	CLIFLexerEXISTS           = 16
	CLIFLexerNOT              = 17
	CLIFLexerCL_ROLESET       = 18
	CLIFLexerCL_TEXT          = 19
	CLIFLexerCL_IMPORTS       = 20
	CLIFLexerCL_EXCLUDES      = 21
	CLIFLexerCL_MODULE        = 22
	CLIFLexerCL_COMMENT       = 23
	CLIFLexerCL_PREFIX        = 24
	CLIFLexerNAMECHARSEQUENCE = 25
	CLIFLexerWHITE            = 26
	CLIFLexerBLOCKCOMMENT     = 27
	CLIFLexerLineComment      = 28
)
