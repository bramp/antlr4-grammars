// Code generated from DGSLexer.g4 by ANTLR 4.9.3. DO NOT EDIT.

package dgs

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 33, 257,
	8, 1, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6,
	4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12,
	9, 12, 4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9,
	17, 4, 18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22,
	4, 23, 9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4,
	28, 9, 28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33,
	9, 33, 4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 5, 2, 89,
	10, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6,
	3, 6, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 10, 3, 11, 3, 11, 3, 11, 3, 12, 5, 12, 119, 10, 12, 3, 12, 3, 12, 3,
	12, 7, 12, 124, 10, 12, 12, 12, 14, 12, 127, 11, 12, 5, 12, 129, 10, 12,
	3, 13, 3, 13, 3, 13, 7, 13, 134, 10, 13, 12, 13, 14, 13, 137, 11, 13, 5,
	13, 139, 10, 13, 3, 13, 3, 13, 5, 13, 143, 10, 13, 3, 13, 7, 13, 146, 10,
	13, 12, 13, 14, 13, 149, 11, 13, 3, 13, 5, 13, 152, 10, 13, 3, 14, 3, 14,
	3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3,
	20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25,
	3, 25, 3, 26, 3, 26, 3, 26, 5, 26, 181, 10, 26, 3, 27, 3, 27, 7, 27, 185,
	10, 27, 12, 27, 14, 27, 188, 11, 27, 3, 28, 3, 28, 5, 28, 192, 10, 28,
	3, 29, 3, 29, 3, 29, 7, 29, 197, 10, 29, 12, 29, 14, 29, 200, 11, 29, 3,
	29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 5, 30, 208, 10, 30, 3, 31, 3, 31,
	3, 31, 7, 31, 213, 10, 31, 12, 31, 14, 31, 216, 11, 31, 3, 31, 3, 31, 3,
	32, 3, 32, 3, 32, 3, 32, 5, 32, 224, 10, 32, 3, 33, 3, 33, 3, 33, 3, 34,
	3, 34, 3, 34, 3, 34, 3, 34, 5, 34, 234, 10, 34, 3, 35, 3, 35, 3, 35, 3,
	35, 3, 35, 3, 36, 6, 36, 242, 10, 36, 13, 36, 14, 36, 243, 3, 36, 3, 36,
	3, 37, 7, 37, 249, 10, 37, 12, 37, 14, 37, 252, 11, 37, 3, 37, 3, 37, 3,
	37, 3, 37, 5, 198, 214, 250, 2, 38, 4, 3, 6, 4, 8, 5, 10, 6, 12, 7, 14,
	8, 16, 9, 18, 10, 20, 11, 22, 12, 24, 13, 26, 14, 28, 15, 30, 16, 32, 17,
	34, 18, 36, 19, 38, 20, 40, 21, 42, 22, 44, 23, 46, 24, 48, 25, 50, 26,
	52, 27, 54, 28, 56, 29, 58, 2, 60, 2, 62, 2, 64, 2, 66, 2, 68, 30, 70,
	31, 72, 32, 74, 33, 4, 2, 3, 11, 4, 2, 45, 45, 47, 47, 3, 2, 51, 59, 3,
	2, 50, 59, 4, 2, 71, 71, 103, 103, 4, 2, 12, 12, 15, 15, 4, 2, 67, 92,
	99, 124, 7, 2, 47, 47, 50, 59, 67, 92, 97, 97, 99, 124, 5, 2, 50, 59, 67,
	72, 99, 104, 4, 2, 11, 11, 34, 34, 2, 271, 2, 4, 3, 2, 2, 2, 2, 6, 3, 2,
	2, 2, 2, 8, 3, 2, 2, 2, 2, 10, 3, 2, 2, 2, 2, 12, 3, 2, 2, 2, 2, 14, 3,
	2, 2, 2, 2, 16, 3, 2, 2, 2, 2, 18, 3, 2, 2, 2, 2, 20, 3, 2, 2, 2, 2, 22,
	3, 2, 2, 2, 2, 24, 3, 2, 2, 2, 2, 26, 3, 2, 2, 2, 2, 28, 3, 2, 2, 2, 2,
	30, 3, 2, 2, 2, 2, 32, 3, 2, 2, 2, 2, 34, 3, 2, 2, 2, 2, 36, 3, 2, 2, 2,
	2, 38, 3, 2, 2, 2, 2, 40, 3, 2, 2, 2, 2, 42, 3, 2, 2, 2, 2, 44, 3, 2, 2,
	2, 2, 46, 3, 2, 2, 2, 2, 48, 3, 2, 2, 2, 2, 50, 3, 2, 2, 2, 2, 52, 3, 2,
	2, 2, 2, 54, 3, 2, 2, 2, 2, 56, 3, 2, 2, 2, 2, 68, 3, 2, 2, 2, 2, 70, 3,
	2, 2, 2, 2, 72, 3, 2, 2, 2, 3, 74, 3, 2, 2, 2, 4, 88, 3, 2, 2, 2, 6, 90,
	3, 2, 2, 2, 8, 93, 3, 2, 2, 2, 10, 96, 3, 2, 2, 2, 12, 99, 3, 2, 2, 2,
	14, 102, 3, 2, 2, 2, 16, 105, 3, 2, 2, 2, 18, 108, 3, 2, 2, 2, 20, 111,
	3, 2, 2, 2, 22, 114, 3, 2, 2, 2, 24, 118, 3, 2, 2, 2, 26, 130, 3, 2, 2,
	2, 28, 153, 3, 2, 2, 2, 30, 155, 3, 2, 2, 2, 32, 157, 3, 2, 2, 2, 34, 159,
	3, 2, 2, 2, 36, 161, 3, 2, 2, 2, 38, 163, 3, 2, 2, 2, 40, 165, 3, 2, 2,
	2, 42, 167, 3, 2, 2, 2, 44, 169, 3, 2, 2, 2, 46, 171, 3, 2, 2, 2, 48, 173,
	3, 2, 2, 2, 50, 175, 3, 2, 2, 2, 52, 180, 3, 2, 2, 2, 54, 182, 3, 2, 2,
	2, 56, 191, 3, 2, 2, 2, 58, 193, 3, 2, 2, 2, 60, 207, 3, 2, 2, 2, 62, 209,
	3, 2, 2, 2, 64, 223, 3, 2, 2, 2, 66, 225, 3, 2, 2, 2, 68, 228, 3, 2, 2,
	2, 70, 235, 3, 2, 2, 2, 72, 241, 3, 2, 2, 2, 74, 250, 3, 2, 2, 2, 76, 77,
	7, 70, 2, 2, 77, 78, 7, 73, 2, 2, 78, 79, 7, 85, 2, 2, 79, 80, 7, 50, 2,
	2, 80, 81, 7, 50, 2, 2, 81, 89, 7, 54, 2, 2, 82, 83, 7, 70, 2, 2, 83, 84,
	7, 73, 2, 2, 84, 85, 7, 85, 2, 2, 85, 86, 7, 50, 2, 2, 86, 87, 7, 50, 2,
	2, 87, 89, 7, 53, 2, 2, 88, 76, 3, 2, 2, 2, 88, 82, 3, 2, 2, 2, 89, 5,
	3, 2, 2, 2, 90, 91, 7, 99, 2, 2, 91, 92, 7, 112, 2, 2, 92, 7, 3, 2, 2,
	2, 93, 94, 7, 101, 2, 2, 94, 95, 7, 112, 2, 2, 95, 9, 3, 2, 2, 2, 96, 97,
	7, 102, 2, 2, 97, 98, 7, 112, 2, 2, 98, 11, 3, 2, 2, 2, 99, 100, 7, 99,
	2, 2, 100, 101, 7, 103, 2, 2, 101, 13, 3, 2, 2, 2, 102, 103, 7, 101, 2,
	2, 103, 104, 7, 103, 2, 2, 104, 15, 3, 2, 2, 2, 105, 106, 7, 102, 2, 2,
	106, 107, 7, 103, 2, 2, 107, 17, 3, 2, 2, 2, 108, 109, 7, 101, 2, 2, 109,
	110, 7, 105, 2, 2, 110, 19, 3, 2, 2, 2, 111, 112, 7, 117, 2, 2, 112, 113,
	7, 118, 2, 2, 113, 21, 3, 2, 2, 2, 114, 115, 7, 101, 2, 2, 115, 116, 7,
	110, 2, 2, 116, 23, 3, 2, 2, 2, 117, 119, 9, 2, 2, 2, 118, 117, 3, 2, 2,
	2, 118, 119, 3, 2, 2, 2, 119, 128, 3, 2, 2, 2, 120, 129, 7, 50, 2, 2, 121,
	125, 9, 3, 2, 2, 122, 124, 9, 4, 2, 2, 123, 122, 3, 2, 2, 2, 124, 127,
	3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 125, 126, 3, 2, 2, 2, 126, 129, 3, 2,
	2, 2, 127, 125, 3, 2, 2, 2, 128, 120, 3, 2, 2, 2, 128, 121, 3, 2, 2, 2,
	129, 25, 3, 2, 2, 2, 130, 138, 5, 24, 12, 2, 131, 135, 7, 48, 2, 2, 132,
	134, 9, 4, 2, 2, 133, 132, 3, 2, 2, 2, 134, 137, 3, 2, 2, 2, 135, 133,
	3, 2, 2, 2, 135, 136, 3, 2, 2, 2, 136, 139, 3, 2, 2, 2, 137, 135, 3, 2,
	2, 2, 138, 131, 3, 2, 2, 2, 138, 139, 3, 2, 2, 2, 139, 151, 3, 2, 2, 2,
	140, 142, 9, 5, 2, 2, 141, 143, 9, 2, 2, 2, 142, 141, 3, 2, 2, 2, 142,
	143, 3, 2, 2, 2, 143, 147, 3, 2, 2, 2, 144, 146, 9, 4, 2, 2, 145, 144,
	3, 2, 2, 2, 146, 149, 3, 2, 2, 2, 147, 145, 3, 2, 2, 2, 147, 148, 3, 2,
	2, 2, 148, 150, 3, 2, 2, 2, 149, 147, 3, 2, 2, 2, 150, 152, 9, 3, 2, 2,
	151, 140, 3, 2, 2, 2, 151, 152, 3, 2, 2, 2, 152, 27, 3, 2, 2, 2, 153, 154,
	7, 45, 2, 2, 154, 29, 3, 2, 2, 2, 155, 156, 7, 47, 2, 2, 156, 31, 3, 2,
	2, 2, 157, 158, 7, 46, 2, 2, 158, 33, 3, 2, 2, 2, 159, 160, 7, 125, 2,
	2, 160, 35, 3, 2, 2, 2, 161, 162, 7, 127, 2, 2, 162, 37, 3, 2, 2, 2, 163,
	164, 7, 93, 2, 2, 164, 39, 3, 2, 2, 2, 165, 166, 7, 95, 2, 2, 166, 41,
	3, 2, 2, 2, 167, 168, 7, 48, 2, 2, 168, 43, 3, 2, 2, 2, 169, 170, 7, 62,
	2, 2, 170, 45, 3, 2, 2, 2, 171, 172, 7, 64, 2, 2, 172, 47, 3, 2, 2, 2,
	173, 174, 7, 63, 2, 2, 174, 49, 3, 2, 2, 2, 175, 176, 7, 60, 2, 2, 176,
	51, 3, 2, 2, 2, 177, 181, 9, 6, 2, 2, 178, 179, 7, 15, 2, 2, 179, 181,
	7, 12, 2, 2, 180, 177, 3, 2, 2, 2, 180, 178, 3, 2, 2, 2, 181, 53, 3, 2,
	2, 2, 182, 186, 9, 7, 2, 2, 183, 185, 9, 8, 2, 2, 184, 183, 3, 2, 2, 2,
	185, 188, 3, 2, 2, 2, 186, 184, 3, 2, 2, 2, 186, 187, 3, 2, 2, 2, 187,
	55, 3, 2, 2, 2, 188, 186, 3, 2, 2, 2, 189, 192, 5, 62, 31, 2, 190, 192,
	5, 58, 29, 2, 191, 189, 3, 2, 2, 2, 191, 190, 3, 2, 2, 2, 192, 57, 3, 2,
	2, 2, 193, 198, 7, 36, 2, 2, 194, 197, 5, 60, 30, 2, 195, 197, 11, 2, 2,
	2, 196, 194, 3, 2, 2, 2, 196, 195, 3, 2, 2, 2, 197, 200, 3, 2, 2, 2, 198,
	199, 3, 2, 2, 2, 198, 196, 3, 2, 2, 2, 199, 201, 3, 2, 2, 2, 200, 198,
	3, 2, 2, 2, 201, 202, 7, 36, 2, 2, 202, 59, 3, 2, 2, 2, 203, 204, 7, 94,
	2, 2, 204, 208, 7, 36, 2, 2, 205, 206, 7, 94, 2, 2, 206, 208, 7, 94, 2,
	2, 207, 203, 3, 2, 2, 2, 207, 205, 3, 2, 2, 2, 208, 61, 3, 2, 2, 2, 209,
	214, 7, 41, 2, 2, 210, 213, 5, 64, 32, 2, 211, 213, 11, 2, 2, 2, 212, 210,
	3, 2, 2, 2, 212, 211, 3, 2, 2, 2, 213, 216, 3, 2, 2, 2, 214, 215, 3, 2,
	2, 2, 214, 212, 3, 2, 2, 2, 215, 217, 3, 2, 2, 2, 216, 214, 3, 2, 2, 2,
	217, 218, 7, 41, 2, 2, 218, 63, 3, 2, 2, 2, 219, 220, 7, 94, 2, 2, 220,
	224, 7, 41, 2, 2, 221, 222, 7, 94, 2, 2, 222, 224, 7, 94, 2, 2, 223, 219,
	3, 2, 2, 2, 223, 221, 3, 2, 2, 2, 224, 65, 3, 2, 2, 2, 225, 226, 9, 9,
	2, 2, 226, 227, 9, 9, 2, 2, 227, 67, 3, 2, 2, 2, 228, 229, 7, 37, 2, 2,
	229, 230, 5, 66, 33, 2, 230, 231, 5, 66, 33, 2, 231, 233, 5, 66, 33, 2,
	232, 234, 5, 66, 33, 2, 233, 232, 3, 2, 2, 2, 233, 234, 3, 2, 2, 2, 234,
	69, 3, 2, 2, 2, 235, 236, 7, 37, 2, 2, 236, 237, 3, 2, 2, 2, 237, 238,
	8, 35, 2, 2, 238, 239, 8, 35, 3, 2, 239, 71, 3, 2, 2, 2, 240, 242, 9, 10,
	2, 2, 241, 240, 3, 2, 2, 2, 242, 243, 3, 2, 2, 2, 243, 241, 3, 2, 2, 2,
	243, 244, 3, 2, 2, 2, 244, 245, 3, 2, 2, 2, 245, 246, 8, 36, 3, 2, 246,
	73, 3, 2, 2, 2, 247, 249, 11, 2, 2, 2, 248, 247, 3, 2, 2, 2, 249, 252,
	3, 2, 2, 2, 250, 251, 3, 2, 2, 2, 250, 248, 3, 2, 2, 2, 251, 253, 3, 2,
	2, 2, 252, 250, 3, 2, 2, 2, 253, 254, 5, 52, 26, 2, 254, 255, 3, 2, 2,
	2, 255, 256, 8, 37, 4, 2, 256, 75, 3, 2, 2, 2, 25, 2, 3, 88, 118, 125,
	128, 135, 138, 142, 147, 151, 180, 186, 191, 196, 198, 207, 212, 214, 223,
	233, 243, 250, 5, 7, 3, 2, 8, 2, 2, 6, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE", "CMT",
}

var lexerLiteralNames = []string{
	"", "", "'an'", "'cn'", "'dn'", "'ae'", "'ce'", "'de'", "'cg'", "'st'",
	"'cl'", "", "", "'+'", "'-'", "','", "'{'", "'}'", "'['", "']'", "'.'",
	"'<'", "'>'", "'='", "':'", "", "", "", "", "'#'",
}

var lexerSymbolicNames = []string{
	"", "MAGIC", "AN", "CN", "DN", "AE", "CE", "DE", "CG", "ST", "CL", "INT",
	"REAL", "PLUS", "MINUS", "COMMA", "LBRACE", "RBRACE", "LBRACK", "RBRACK",
	"DOT", "LANGLE", "RANGLE", "EQUALS", "COLON", "EOL", "WORD", "STRING",
	"COLOR", "START_COMMENT", "WS", "COMMENT",
}

var lexerRuleNames = []string{
	"MAGIC", "AN", "CN", "DN", "AE", "CE", "DE", "CG", "ST", "CL", "INT", "REAL",
	"PLUS", "MINUS", "COMMA", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "DOT",
	"LANGLE", "RANGLE", "EQUALS", "COLON", "EOL", "WORD", "STRING", "DQSTRING",
	"DQESC", "SQSTRING", "SQESC", "HEXBYTE", "COLOR", "START_COMMENT", "WS",
	"COMMENT",
}

type DGSLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewDGSLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *DGSLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewDGSLexer(input antlr.CharStream) *DGSLexer {
	l := new(DGSLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "DGSLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DGSLexer tokens.
const (
	DGSLexerMAGIC         = 1
	DGSLexerAN            = 2
	DGSLexerCN            = 3
	DGSLexerDN            = 4
	DGSLexerAE            = 5
	DGSLexerCE            = 6
	DGSLexerDE            = 7
	DGSLexerCG            = 8
	DGSLexerST            = 9
	DGSLexerCL            = 10
	DGSLexerINT           = 11
	DGSLexerREAL          = 12
	DGSLexerPLUS          = 13
	DGSLexerMINUS         = 14
	DGSLexerCOMMA         = 15
	DGSLexerLBRACE        = 16
	DGSLexerRBRACE        = 17
	DGSLexerLBRACK        = 18
	DGSLexerRBRACK        = 19
	DGSLexerDOT           = 20
	DGSLexerLANGLE        = 21
	DGSLexerRANGLE        = 22
	DGSLexerEQUALS        = 23
	DGSLexerCOLON         = 24
	DGSLexerEOL           = 25
	DGSLexerWORD          = 26
	DGSLexerSTRING        = 27
	DGSLexerCOLOR         = 28
	DGSLexerSTART_COMMENT = 29
	DGSLexerWS            = 30
	DGSLexerCOMMENT       = 31
)

// DGSLexerCMT is the DGSLexer mode.
const DGSLexerCMT = 1
