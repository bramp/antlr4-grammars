// Code generated from LarkLexer.g4 by ANTLR 4.9.3. DO NOT EDIT.

package lark

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 28, 245,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7,
	3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3,
	15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 5, 19,
	132, 10, 19, 3, 20, 5, 20, 135, 10, 20, 3, 20, 5, 20, 138, 10, 20, 3, 20,
	3, 20, 7, 20, 142, 10, 20, 12, 20, 14, 20, 145, 11, 20, 3, 21, 5, 21, 148,
	10, 21, 3, 21, 3, 21, 7, 21, 152, 10, 21, 12, 21, 14, 21, 155, 11, 21,
	3, 22, 3, 22, 5, 22, 159, 10, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3,
	23, 7, 23, 167, 10, 23, 12, 23, 14, 23, 170, 11, 23, 3, 23, 3, 23, 7, 23,
	174, 10, 23, 12, 23, 14, 23, 177, 11, 23, 3, 24, 5, 24, 180, 10, 24, 3,
	24, 6, 24, 183, 10, 24, 13, 24, 14, 24, 184, 3, 24, 3, 24, 3, 24, 3, 24,
	3, 24, 3, 24, 7, 24, 193, 10, 24, 12, 24, 14, 24, 196, 11, 24, 3, 24, 3,
	24, 3, 25, 7, 25, 201, 10, 25, 12, 25, 14, 25, 204, 11, 25, 3, 26, 3, 26,
	3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 5, 29, 216, 10,
	29, 3, 30, 6, 30, 219, 10, 30, 13, 30, 14, 30, 220, 3, 31, 5, 31, 224,
	10, 31, 3, 31, 3, 31, 3, 32, 6, 32, 229, 10, 32, 13, 32, 14, 32, 230, 3,
	32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 33, 7, 33, 239, 10, 33, 12, 33, 14,
	33, 242, 11, 33, 3, 33, 3, 33, 4, 168, 202, 2, 34, 3, 3, 5, 4, 7, 5, 9,
	6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15,
	29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24,
	47, 25, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 59, 2, 61, 26, 63, 27, 65, 28,
	3, 2, 16, 4, 2, 44, 45, 65, 65, 4, 2, 65, 65, 97, 97, 3, 2, 99, 124, 5,
	2, 50, 59, 97, 97, 99, 124, 3, 2, 67, 92, 5, 2, 50, 59, 67, 92, 97, 97,
	3, 2, 49, 49, 7, 2, 107, 107, 110, 111, 117, 117, 119, 119, 122, 122, 5,
	2, 11, 12, 14, 15, 34, 34, 3, 2, 36, 36, 4, 2, 67, 72, 99, 104, 4, 2, 45,
	45, 47, 47, 4, 2, 11, 11, 34, 34, 3, 2, 12, 12, 2, 258, 2, 3, 3, 2, 2,
	2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2,
	2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2,
	2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3,
	2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35,
	3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2,
	43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2,
	2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 3, 67, 3, 2, 2, 2, 5, 69, 3, 2, 2,
	2, 7, 71, 3, 2, 2, 2, 9, 73, 3, 2, 2, 2, 11, 75, 3, 2, 2, 2, 13, 77, 3,
	2, 2, 2, 15, 79, 3, 2, 2, 2, 17, 81, 3, 2, 2, 2, 19, 83, 3, 2, 2, 2, 21,
	85, 3, 2, 2, 2, 23, 88, 3, 2, 2, 2, 25, 96, 3, 2, 2, 2, 27, 104, 3, 2,
	2, 2, 29, 114, 3, 2, 2, 2, 31, 123, 3, 2, 2, 2, 33, 126, 3, 2, 2, 2, 35,
	128, 3, 2, 2, 2, 37, 131, 3, 2, 2, 2, 39, 134, 3, 2, 2, 2, 41, 147, 3,
	2, 2, 2, 43, 156, 3, 2, 2, 2, 45, 160, 3, 2, 2, 2, 47, 182, 3, 2, 2, 2,
	49, 202, 3, 2, 2, 2, 51, 205, 3, 2, 2, 2, 53, 207, 3, 2, 2, 2, 55, 211,
	3, 2, 2, 2, 57, 215, 3, 2, 2, 2, 59, 218, 3, 2, 2, 2, 61, 223, 3, 2, 2,
	2, 63, 228, 3, 2, 2, 2, 65, 234, 3, 2, 2, 2, 67, 68, 7, 60, 2, 2, 68, 4,
	3, 2, 2, 2, 69, 70, 7, 125, 2, 2, 70, 6, 3, 2, 2, 2, 71, 72, 7, 127, 2,
	2, 72, 8, 3, 2, 2, 2, 73, 74, 7, 42, 2, 2, 74, 10, 3, 2, 2, 2, 75, 76,
	7, 43, 2, 2, 76, 12, 3, 2, 2, 2, 77, 78, 7, 93, 2, 2, 78, 14, 3, 2, 2,
	2, 79, 80, 7, 95, 2, 2, 80, 16, 3, 2, 2, 2, 81, 82, 7, 46, 2, 2, 82, 18,
	3, 2, 2, 2, 83, 84, 7, 48, 2, 2, 84, 20, 3, 2, 2, 2, 85, 86, 7, 47, 2,
	2, 86, 87, 7, 64, 2, 2, 87, 22, 3, 2, 2, 2, 88, 89, 7, 39, 2, 2, 89, 90,
	7, 107, 2, 2, 90, 91, 7, 105, 2, 2, 91, 92, 7, 112, 2, 2, 92, 93, 7, 113,
	2, 2, 93, 94, 7, 116, 2, 2, 94, 95, 7, 103, 2, 2, 95, 24, 3, 2, 2, 2, 96,
	97, 7, 39, 2, 2, 97, 98, 7, 107, 2, 2, 98, 99, 7, 111, 2, 2, 99, 100, 7,
	114, 2, 2, 100, 101, 7, 113, 2, 2, 101, 102, 7, 116, 2, 2, 102, 103, 7,
	118, 2, 2, 103, 26, 3, 2, 2, 2, 104, 105, 7, 39, 2, 2, 105, 106, 7, 113,
	2, 2, 106, 107, 7, 120, 2, 2, 107, 108, 7, 103, 2, 2, 108, 109, 7, 116,
	2, 2, 109, 110, 7, 116, 2, 2, 110, 111, 7, 107, 2, 2, 111, 112, 7, 102,
	2, 2, 112, 113, 7, 103, 2, 2, 113, 28, 3, 2, 2, 2, 114, 115, 7, 39, 2,
	2, 115, 116, 7, 102, 2, 2, 116, 117, 7, 103, 2, 2, 117, 118, 7, 101, 2,
	2, 118, 119, 7, 110, 2, 2, 119, 120, 7, 99, 2, 2, 120, 121, 7, 116, 2,
	2, 121, 122, 7, 103, 2, 2, 122, 30, 3, 2, 2, 2, 123, 124, 7, 48, 2, 2,
	124, 125, 7, 48, 2, 2, 125, 32, 3, 2, 2, 2, 126, 127, 7, 128, 2, 2, 127,
	34, 3, 2, 2, 2, 128, 129, 7, 126, 2, 2, 129, 36, 3, 2, 2, 2, 130, 132,
	9, 2, 2, 2, 131, 130, 3, 2, 2, 2, 132, 38, 3, 2, 2, 2, 133, 135, 7, 35,
	2, 2, 134, 133, 3, 2, 2, 2, 134, 135, 3, 2, 2, 2, 135, 137, 3, 2, 2, 2,
	136, 138, 9, 3, 2, 2, 137, 136, 3, 2, 2, 2, 137, 138, 3, 2, 2, 2, 138,
	139, 3, 2, 2, 2, 139, 143, 9, 4, 2, 2, 140, 142, 9, 5, 2, 2, 141, 140,
	3, 2, 2, 2, 142, 145, 3, 2, 2, 2, 143, 141, 3, 2, 2, 2, 143, 144, 3, 2,
	2, 2, 144, 40, 3, 2, 2, 2, 145, 143, 3, 2, 2, 2, 146, 148, 7, 97, 2, 2,
	147, 146, 3, 2, 2, 2, 147, 148, 3, 2, 2, 2, 148, 149, 3, 2, 2, 2, 149,
	153, 9, 6, 2, 2, 150, 152, 9, 7, 2, 2, 151, 150, 3, 2, 2, 2, 152, 155,
	3, 2, 2, 2, 153, 151, 3, 2, 2, 2, 153, 154, 3, 2, 2, 2, 154, 42, 3, 2,
	2, 2, 155, 153, 3, 2, 2, 2, 156, 158, 5, 53, 27, 2, 157, 159, 7, 107, 2,
	2, 158, 157, 3, 2, 2, 2, 158, 159, 3, 2, 2, 2, 159, 44, 3, 2, 2, 2, 160,
	168, 7, 49, 2, 2, 161, 162, 7, 94, 2, 2, 162, 167, 7, 49, 2, 2, 163, 164,
	7, 94, 2, 2, 164, 167, 7, 94, 2, 2, 165, 167, 10, 8, 2, 2, 166, 161, 3,
	2, 2, 2, 166, 163, 3, 2, 2, 2, 166, 165, 3, 2, 2, 2, 167, 170, 3, 2, 2,
	2, 168, 169, 3, 2, 2, 2, 168, 166, 3, 2, 2, 2, 169, 171, 3, 2, 2, 2, 170,
	168, 3, 2, 2, 2, 171, 175, 7, 49, 2, 2, 172, 174, 9, 9, 2, 2, 173, 172,
	3, 2, 2, 2, 174, 177, 3, 2, 2, 2, 175, 173, 3, 2, 2, 2, 175, 176, 3, 2,
	2, 2, 176, 46, 3, 2, 2, 2, 177, 175, 3, 2, 2, 2, 178, 180, 7, 15, 2, 2,
	179, 178, 3, 2, 2, 2, 179, 180, 3, 2, 2, 2, 180, 181, 3, 2, 2, 2, 181,
	183, 7, 12, 2, 2, 182, 179, 3, 2, 2, 2, 183, 184, 3, 2, 2, 2, 184, 182,
	3, 2, 2, 2, 184, 185, 3, 2, 2, 2, 185, 194, 3, 2, 2, 2, 186, 193, 9, 10,
	2, 2, 187, 188, 7, 119, 2, 2, 188, 189, 7, 52, 2, 2, 189, 190, 7, 68, 2,
	2, 190, 191, 7, 57, 2, 2, 191, 193, 7, 72, 2, 2, 192, 186, 3, 2, 2, 2,
	192, 187, 3, 2, 2, 2, 193, 196, 3, 2, 2, 2, 194, 192, 3, 2, 2, 2, 194,
	195, 3, 2, 2, 2, 195, 197, 3, 2, 2, 2, 196, 194, 3, 2, 2, 2, 197, 198,
	8, 24, 2, 2, 198, 48, 3, 2, 2, 2, 199, 201, 10, 11, 2, 2, 200, 199, 3,
	2, 2, 2, 201, 204, 3, 2, 2, 2, 202, 203, 3, 2, 2, 2, 202, 200, 3, 2, 2,
	2, 203, 50, 3, 2, 2, 2, 204, 202, 3, 2, 2, 2, 205, 206, 5, 49, 25, 2, 206,
	52, 3, 2, 2, 2, 207, 208, 7, 36, 2, 2, 208, 209, 5, 51, 26, 2, 209, 210,
	7, 36, 2, 2, 210, 54, 3, 2, 2, 2, 211, 212, 4, 50, 59, 2, 212, 56, 3, 2,
	2, 2, 213, 216, 9, 12, 2, 2, 214, 216, 5, 55, 28, 2, 215, 213, 3, 2, 2,
	2, 215, 214, 3, 2, 2, 2, 216, 58, 3, 2, 2, 2, 217, 219, 5, 55, 28, 2, 218,
	217, 3, 2, 2, 2, 219, 220, 3, 2, 2, 2, 220, 218, 3, 2, 2, 2, 220, 221,
	3, 2, 2, 2, 221, 60, 3, 2, 2, 2, 222, 224, 9, 13, 2, 2, 223, 222, 3, 2,
	2, 2, 223, 224, 3, 2, 2, 2, 224, 225, 3, 2, 2, 2, 225, 226, 5, 59, 30,
	2, 226, 62, 3, 2, 2, 2, 227, 229, 9, 14, 2, 2, 228, 227, 3, 2, 2, 2, 229,
	230, 3, 2, 2, 2, 230, 228, 3, 2, 2, 2, 230, 231, 3, 2, 2, 2, 231, 232,
	3, 2, 2, 2, 232, 233, 8, 32, 2, 2, 233, 64, 3, 2, 2, 2, 234, 235, 7, 49,
	2, 2, 235, 236, 7, 49, 2, 2, 236, 240, 3, 2, 2, 2, 237, 239, 10, 15, 2,
	2, 238, 237, 3, 2, 2, 2, 239, 242, 3, 2, 2, 2, 240, 238, 3, 2, 2, 2, 240,
	241, 3, 2, 2, 2, 241, 243, 3, 2, 2, 2, 242, 240, 3, 2, 2, 2, 243, 244,
	8, 33, 2, 2, 244, 66, 3, 2, 2, 2, 23, 2, 131, 134, 137, 143, 147, 153,
	158, 166, 168, 175, 179, 184, 192, 194, 202, 215, 220, 223, 230, 240, 3,
	2, 4, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "OFF_CHANNEL",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "':'", "'{'", "'}'", "'('", "')'", "'['", "']'", "','", "'.'", "'->'",
	"'%ignore'", "'%import'", "'%override'", "'%declare'", "'..'", "'~'", "'|'",
}

var lexerSymbolicNames = []string{
	"", "COLON", "LC", "RC", "LP", "RP", "LB", "RB", "COMMA", "DOT", "ARROW",
	"IGNORE", "IMPORT", "OVERRIDE", "DECLARE", "DD", "SQ", "VBAR", "OP", "RULE",
	"TOKEN", "STRING", "REGEXP", "NL", "NUMBER", "WS_INLINE", "COMMENT",
}

var lexerRuleNames = []string{
	"COLON", "LC", "RC", "LP", "RP", "LB", "RB", "COMMA", "DOT", "ARROW", "IGNORE",
	"IMPORT", "OVERRIDE", "DECLARE", "DD", "SQ", "VBAR", "OP", "RULE", "TOKEN",
	"STRING", "REGEXP", "NL", "STRING_INNER", "STRING_ESC_INNER", "FSTRING",
	"DIGIT", "HEXDIGIT", "INT", "NUMBER", "WS_INLINE", "COMMENT",
}

type LarkLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewLarkLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *LarkLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewLarkLexer(input antlr.CharStream) *LarkLexer {
	l := new(LarkLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "LarkLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// LarkLexer tokens.
const (
	LarkLexerCOLON     = 1
	LarkLexerLC        = 2
	LarkLexerRC        = 3
	LarkLexerLP        = 4
	LarkLexerRP        = 5
	LarkLexerLB        = 6
	LarkLexerRB        = 7
	LarkLexerCOMMA     = 8
	LarkLexerDOT       = 9
	LarkLexerARROW     = 10
	LarkLexerIGNORE    = 11
	LarkLexerIMPORT    = 12
	LarkLexerOVERRIDE  = 13
	LarkLexerDECLARE   = 14
	LarkLexerDD        = 15
	LarkLexerSQ        = 16
	LarkLexerVBAR      = 17
	LarkLexerOP        = 18
	LarkLexerRULE      = 19
	LarkLexerTOKEN     = 20
	LarkLexerSTRING    = 21
	LarkLexerREGEXP    = 22
	LarkLexerNL        = 23
	LarkLexerNUMBER    = 24
	LarkLexerWS_INLINE = 25
	LarkLexerCOMMENT   = 26
)

// LarkLexerOFF_CHANNEL is the LarkLexer channel.
const LarkLexerOFF_CHANNEL = 2
