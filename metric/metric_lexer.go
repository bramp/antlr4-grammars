// Code generated from metric.g4 by ANTLR 4.9.3. DO NOT EDIT.

package metric

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 50, 218,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3,
	12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17,
	3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3,
	23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26,
	3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3,
	30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34,
	3, 35, 3, 35, 3, 36, 3, 36, 3, 37, 3, 37, 3, 38, 3, 38, 3, 39, 3, 39, 3,
	39, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43,
	3, 43, 3, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 46, 3, 46, 3, 46, 3,
	47, 3, 47, 3, 47, 3, 47, 3, 48, 6, 48, 211, 10, 48, 13, 48, 14, 48, 212,
	3, 49, 3, 49, 3, 49, 3, 49, 2, 2, 50, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13,
	8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35,
	69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44,
	87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 3, 2, 4, 3, 2, 50, 59,
	5, 2, 11, 12, 15, 15, 34, 34, 2, 218, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2,
	2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2,
	2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3,
	2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29,
	3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2,
	37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2,
	2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2,
	2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2,
	2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3,
	2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75,
	3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2,
	83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2,
	2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2,
	2, 3, 99, 3, 2, 2, 2, 5, 101, 3, 2, 2, 2, 7, 103, 3, 2, 2, 2, 9, 105, 3,
	2, 2, 2, 11, 107, 3, 2, 2, 2, 13, 109, 3, 2, 2, 2, 15, 111, 3, 2, 2, 2,
	17, 113, 3, 2, 2, 2, 19, 115, 3, 2, 2, 2, 21, 117, 3, 2, 2, 2, 23, 119,
	3, 2, 2, 2, 25, 122, 3, 2, 2, 2, 27, 124, 3, 2, 2, 2, 29, 126, 3, 2, 2,
	2, 31, 128, 3, 2, 2, 2, 33, 130, 3, 2, 2, 2, 35, 132, 3, 2, 2, 2, 37, 134,
	3, 2, 2, 2, 39, 136, 3, 2, 2, 2, 41, 138, 3, 2, 2, 2, 43, 140, 3, 2, 2,
	2, 45, 142, 3, 2, 2, 2, 47, 144, 3, 2, 2, 2, 49, 146, 3, 2, 2, 2, 51, 150,
	3, 2, 2, 2, 53, 153, 3, 2, 2, 2, 55, 157, 3, 2, 2, 2, 57, 160, 3, 2, 2,
	2, 59, 163, 3, 2, 2, 2, 61, 165, 3, 2, 2, 2, 63, 168, 3, 2, 2, 2, 65, 170,
	3, 2, 2, 2, 67, 172, 3, 2, 2, 2, 69, 174, 3, 2, 2, 2, 71, 176, 3, 2, 2,
	2, 73, 178, 3, 2, 2, 2, 75, 180, 3, 2, 2, 2, 77, 182, 3, 2, 2, 2, 79, 185,
	3, 2, 2, 2, 81, 187, 3, 2, 2, 2, 83, 190, 3, 2, 2, 2, 85, 193, 3, 2, 2,
	2, 87, 196, 3, 2, 2, 2, 89, 199, 3, 2, 2, 2, 91, 202, 3, 2, 2, 2, 93, 205,
	3, 2, 2, 2, 95, 210, 3, 2, 2, 2, 97, 214, 3, 2, 2, 2, 99, 100, 7, 44, 2,
	2, 100, 4, 3, 2, 2, 2, 101, 102, 7, 49, 2, 2, 102, 6, 3, 2, 2, 2, 103,
	104, 7, 96, 2, 2, 104, 8, 3, 2, 2, 2, 105, 106, 7, 71, 2, 2, 106, 10, 3,
	2, 2, 2, 107, 108, 7, 82, 2, 2, 108, 12, 3, 2, 2, 2, 109, 110, 7, 86, 2,
	2, 110, 14, 3, 2, 2, 2, 111, 112, 7, 73, 2, 2, 112, 16, 3, 2, 2, 2, 113,
	114, 7, 79, 2, 2, 114, 18, 3, 2, 2, 2, 115, 116, 7, 109, 2, 2, 116, 20,
	3, 2, 2, 2, 117, 118, 7, 106, 2, 2, 118, 22, 3, 2, 2, 2, 119, 120, 7, 102,
	2, 2, 120, 121, 7, 99, 2, 2, 121, 24, 3, 2, 2, 2, 122, 123, 7, 102, 2,
	2, 123, 26, 3, 2, 2, 2, 124, 125, 7, 101, 2, 2, 125, 28, 3, 2, 2, 2, 126,
	127, 7, 111, 2, 2, 127, 30, 3, 2, 2, 2, 128, 129, 7, 183, 2, 2, 129, 32,
	3, 2, 2, 2, 130, 131, 7, 112, 2, 2, 131, 34, 3, 2, 2, 2, 132, 133, 7, 114,
	2, 2, 133, 36, 3, 2, 2, 2, 134, 135, 7, 104, 2, 2, 135, 38, 3, 2, 2, 2,
	136, 137, 7, 99, 2, 2, 137, 40, 3, 2, 2, 2, 138, 139, 7, 105, 2, 2, 139,
	42, 3, 2, 2, 2, 140, 141, 7, 117, 2, 2, 141, 44, 3, 2, 2, 2, 142, 143,
	7, 67, 2, 2, 143, 46, 3, 2, 2, 2, 144, 145, 7, 77, 2, 2, 145, 48, 3, 2,
	2, 2, 146, 147, 7, 111, 2, 2, 147, 148, 7, 113, 2, 2, 148, 149, 7, 110,
	2, 2, 149, 50, 3, 2, 2, 2, 150, 151, 7, 101, 2, 2, 151, 152, 7, 102, 2,
	2, 152, 52, 3, 2, 2, 2, 153, 154, 7, 116, 2, 2, 154, 155, 7, 99, 2, 2,
	155, 156, 7, 102, 2, 2, 156, 54, 3, 2, 2, 2, 157, 158, 7, 74, 2, 2, 158,
	159, 7, 124, 2, 2, 159, 56, 3, 2, 2, 2, 160, 161, 7, 117, 2, 2, 161, 162,
	7, 116, 2, 2, 162, 58, 3, 2, 2, 2, 163, 164, 7, 80, 2, 2, 164, 60, 3, 2,
	2, 2, 165, 166, 7, 82, 2, 2, 166, 167, 7, 99, 2, 2, 167, 62, 3, 2, 2, 2,
	168, 169, 7, 76, 2, 2, 169, 64, 3, 2, 2, 2, 170, 171, 7, 89, 2, 2, 171,
	66, 3, 2, 2, 2, 172, 173, 7, 69, 2, 2, 173, 68, 3, 2, 2, 2, 174, 175, 7,
	88, 2, 2, 175, 70, 3, 2, 2, 2, 176, 177, 7, 72, 2, 2, 177, 72, 3, 2, 2,
	2, 178, 179, 7, 939, 2, 2, 179, 74, 3, 2, 2, 2, 180, 181, 7, 85, 2, 2,
	181, 76, 3, 2, 2, 2, 182, 183, 7, 89, 2, 2, 183, 184, 7, 100, 2, 2, 184,
	78, 3, 2, 2, 2, 185, 186, 7, 74, 2, 2, 186, 80, 3, 2, 2, 2, 187, 188, 7,
	732, 2, 2, 188, 189, 7, 69, 2, 2, 189, 82, 3, 2, 2, 2, 190, 191, 7, 110,
	2, 2, 191, 192, 7, 111, 2, 2, 192, 84, 3, 2, 2, 2, 193, 194, 7, 110, 2,
	2, 194, 195, 7, 122, 2, 2, 195, 86, 3, 2, 2, 2, 196, 197, 7, 68, 2, 2,
	197, 198, 7, 115, 2, 2, 198, 88, 3, 2, 2, 2, 199, 200, 7, 73, 2, 2, 200,
	201, 7, 123, 2, 2, 201, 90, 3, 2, 2, 2, 202, 203, 7, 85, 2, 2, 203, 204,
	7, 120, 2, 2, 204, 92, 3, 2, 2, 2, 205, 206, 7, 109, 2, 2, 206, 207, 7,
	99, 2, 2, 207, 208, 7, 118, 2, 2, 208, 94, 3, 2, 2, 2, 209, 211, 9, 2,
	2, 2, 210, 209, 3, 2, 2, 2, 211, 212, 3, 2, 2, 2, 212, 210, 3, 2, 2, 2,
	212, 213, 3, 2, 2, 2, 213, 96, 3, 2, 2, 2, 214, 215, 9, 3, 2, 2, 215, 216,
	3, 2, 2, 2, 216, 217, 8, 49, 2, 2, 217, 98, 3, 2, 2, 2, 4, 2, 212, 3, 8,
	2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'*'", "'/'", "'^'", "'E'", "'P'", "'T'", "'G'", "'M'", "'k'", "'h'",
	"'da'", "'d'", "'c'", "'m'", "'\u00B5'", "'n'", "'p'", "'f'", "'a'", "'g'",
	"'s'", "'A'", "'K'", "'mol'", "'cd'", "'rad'", "'Hz'", "'sr'", "'N'", "'Pa'",
	"'J'", "'W'", "'C'", "'V'", "'F'", "'\u03A9'", "'S'", "'Wb'", "'H'", "'\u02DAC'",
	"'lm'", "'lx'", "'Bq'", "'Gy'", "'Sv'", "'kat'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "INTE", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
	"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
	"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
	"T__41", "T__42", "T__43", "T__44", "T__45", "INTE", "WS",
}

type metricLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewmetricLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *metricLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewmetricLexer(input antlr.CharStream) *metricLexer {
	l := new(metricLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "metric.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// metricLexer tokens.
const (
	metricLexerT__0  = 1
	metricLexerT__1  = 2
	metricLexerT__2  = 3
	metricLexerT__3  = 4
	metricLexerT__4  = 5
	metricLexerT__5  = 6
	metricLexerT__6  = 7
	metricLexerT__7  = 8
	metricLexerT__8  = 9
	metricLexerT__9  = 10
	metricLexerT__10 = 11
	metricLexerT__11 = 12
	metricLexerT__12 = 13
	metricLexerT__13 = 14
	metricLexerT__14 = 15
	metricLexerT__15 = 16
	metricLexerT__16 = 17
	metricLexerT__17 = 18
	metricLexerT__18 = 19
	metricLexerT__19 = 20
	metricLexerT__20 = 21
	metricLexerT__21 = 22
	metricLexerT__22 = 23
	metricLexerT__23 = 24
	metricLexerT__24 = 25
	metricLexerT__25 = 26
	metricLexerT__26 = 27
	metricLexerT__27 = 28
	metricLexerT__28 = 29
	metricLexerT__29 = 30
	metricLexerT__30 = 31
	metricLexerT__31 = 32
	metricLexerT__32 = 33
	metricLexerT__33 = 34
	metricLexerT__34 = 35
	metricLexerT__35 = 36
	metricLexerT__36 = 37
	metricLexerT__37 = 38
	metricLexerT__38 = 39
	metricLexerT__39 = 40
	metricLexerT__40 = 41
	metricLexerT__41 = 42
	metricLexerT__42 = 43
	metricLexerT__43 = 44
	metricLexerT__44 = 45
	metricLexerT__45 = 46
	metricLexerINTE  = 47
	metricLexerWS    = 48
)
