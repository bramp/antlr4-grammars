// Code generated from BSL.g4 by ANTLR 4.9.3. DO NOT EDIT.

package bsl

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 32, 329,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 3, 2, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3,
	5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3,
	9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17,
	3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3,
	18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18,
	3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20,
	3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3,
	21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 23,
	6, 23, 220, 10, 23, 13, 23, 14, 23, 221, 3, 24, 3, 24, 3, 24, 3, 24, 7,
	24, 228, 10, 24, 12, 24, 14, 24, 231, 11, 24, 3, 24, 3, 24, 3, 24, 3, 24,
	3, 24, 3, 24, 5, 24, 239, 10, 24, 3, 25, 3, 25, 7, 25, 243, 10, 25, 12,
	25, 14, 25, 246, 11, 25, 3, 25, 5, 25, 249, 10, 25, 3, 26, 3, 26, 3, 26,
	3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3,
	26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 5, 26, 270, 10, 26, 3, 27, 3, 27,
	7, 27, 274, 10, 27, 12, 27, 14, 27, 277, 11, 27, 3, 27, 3, 27, 3, 28, 3,
	28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 5, 28, 291,
	10, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 7, 29, 300, 10,
	29, 12, 29, 14, 29, 303, 11, 29, 3, 29, 5, 29, 306, 10, 29, 3, 29, 3, 29,
	3, 29, 3, 29, 3, 30, 3, 30, 7, 30, 314, 10, 30, 12, 30, 14, 30, 317, 11,
	30, 3, 30, 5, 30, 320, 10, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 31, 3, 31,
	3, 31, 3, 31, 2, 2, 32, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17,
	10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35,
	19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53,
	28, 55, 29, 57, 30, 59, 31, 61, 32, 3, 2, 9, 11, 2, 35, 35, 38, 40, 44,
	45, 47, 60, 62, 92, 94, 94, 96, 97, 99, 124, 128, 128, 3, 2, 50, 59, 3,
	2, 51, 59, 3, 2, 34, 128, 5, 2, 50, 59, 67, 92, 99, 124, 4, 2, 12, 12,
	15, 15, 5, 2, 11, 12, 14, 15, 34, 34, 2, 345, 2, 3, 3, 2, 2, 2, 2, 5, 3,
	2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13,
	3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2,
	21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2,
	2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2,
	2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2,
	2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3,
	2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59,
	3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 3, 63, 3, 2, 2, 2, 5, 65, 3, 2, 2, 2, 7,
	72, 3, 2, 2, 2, 9, 74, 3, 2, 2, 2, 11, 81, 3, 2, 2, 2, 13, 95, 3, 2, 2,
	2, 15, 100, 3, 2, 2, 2, 17, 102, 3, 2, 2, 2, 19, 104, 3, 2, 2, 2, 21, 110,
	3, 2, 2, 2, 23, 113, 3, 2, 2, 2, 25, 117, 3, 2, 2, 2, 27, 120, 3, 2, 2,
	2, 29, 124, 3, 2, 2, 2, 31, 137, 3, 2, 2, 2, 33, 150, 3, 2, 2, 2, 35, 163,
	3, 2, 2, 2, 37, 179, 3, 2, 2, 2, 39, 195, 3, 2, 2, 2, 41, 207, 3, 2, 2,
	2, 43, 215, 3, 2, 2, 2, 45, 219, 3, 2, 2, 2, 47, 238, 3, 2, 2, 2, 49, 248,
	3, 2, 2, 2, 51, 269, 3, 2, 2, 2, 53, 271, 3, 2, 2, 2, 55, 290, 3, 2, 2,
	2, 57, 292, 3, 2, 2, 2, 59, 311, 3, 2, 2, 2, 61, 325, 3, 2, 2, 2, 63, 64,
	7, 42, 2, 2, 64, 4, 3, 2, 2, 2, 65, 66, 7, 102, 2, 2, 66, 67, 7, 103, 2,
	2, 67, 68, 7, 104, 2, 2, 68, 69, 7, 107, 2, 2, 69, 70, 7, 112, 2, 2, 70,
	71, 7, 103, 2, 2, 71, 6, 3, 2, 2, 2, 72, 73, 7, 43, 2, 2, 73, 8, 3, 2,
	2, 2, 74, 75, 7, 110, 2, 2, 75, 76, 7, 99, 2, 2, 76, 77, 7, 111, 2, 2,
	77, 78, 7, 100, 2, 2, 78, 79, 7, 102, 2, 2, 79, 80, 7, 99, 2, 2, 80, 10,
	3, 2, 2, 2, 81, 82, 7, 102, 2, 2, 82, 83, 7, 103, 2, 2, 83, 84, 7, 104,
	2, 2, 84, 85, 7, 107, 2, 2, 85, 86, 7, 112, 2, 2, 86, 87, 7, 103, 2, 2,
	87, 88, 7, 47, 2, 2, 88, 89, 7, 117, 2, 2, 89, 90, 7, 118, 2, 2, 90, 91,
	7, 116, 2, 2, 91, 92, 7, 119, 2, 2, 92, 93, 7, 101, 2, 2, 93, 94, 7, 118,
	2, 2, 94, 12, 3, 2, 2, 2, 95, 96, 7, 101, 2, 2, 96, 97, 7, 113, 2, 2, 97,
	98, 7, 112, 2, 2, 98, 99, 7, 102, 2, 2, 99, 14, 3, 2, 2, 2, 100, 101, 7,
	93, 2, 2, 101, 16, 3, 2, 2, 2, 102, 103, 7, 95, 2, 2, 103, 18, 3, 2, 2,
	2, 104, 105, 7, 103, 2, 2, 105, 106, 7, 110, 2, 2, 106, 107, 7, 117, 2,
	2, 107, 108, 7, 103, 2, 2, 108, 109, 7, 34, 2, 2, 109, 20, 3, 2, 2, 2,
	110, 111, 7, 107, 2, 2, 111, 112, 7, 104, 2, 2, 112, 22, 3, 2, 2, 2, 113,
	114, 7, 99, 2, 2, 114, 115, 7, 112, 2, 2, 115, 116, 7, 102, 2, 2, 116,
	24, 3, 2, 2, 2, 117, 118, 7, 113, 2, 2, 118, 119, 7, 116, 2, 2, 119, 26,
	3, 2, 2, 2, 120, 121, 7, 8219, 2, 2, 121, 122, 7, 42, 2, 2, 122, 123, 7,
	43, 2, 2, 123, 28, 3, 2, 2, 2, 124, 125, 7, 101, 2, 2, 125, 126, 7, 106,
	2, 2, 126, 127, 7, 103, 2, 2, 127, 128, 7, 101, 2, 2, 128, 129, 7, 109,
	2, 2, 129, 130, 7, 47, 2, 2, 130, 131, 7, 103, 2, 2, 131, 132, 7, 122,
	2, 2, 132, 133, 7, 114, 2, 2, 133, 134, 7, 103, 2, 2, 134, 135, 7, 101,
	2, 2, 135, 136, 7, 118, 2, 2, 136, 30, 3, 2, 2, 2, 137, 138, 7, 101, 2,
	2, 138, 139, 7, 106, 2, 2, 139, 140, 7, 103, 2, 2, 140, 141, 7, 101, 2,
	2, 141, 142, 7, 109, 2, 2, 142, 143, 7, 47, 2, 2, 143, 144, 7, 116, 2,
	2, 144, 145, 7, 99, 2, 2, 145, 146, 7, 112, 2, 2, 146, 147, 7, 102, 2,
	2, 147, 148, 7, 113, 2, 2, 148, 149, 7, 111, 2, 2, 149, 32, 3, 2, 2, 2,
	150, 151, 7, 101, 2, 2, 151, 152, 7, 106, 2, 2, 152, 153, 7, 103, 2, 2,
	153, 154, 7, 101, 2, 2, 154, 155, 7, 109, 2, 2, 155, 156, 7, 47, 2, 2,
	156, 157, 7, 121, 2, 2, 157, 158, 7, 107, 2, 2, 158, 159, 7, 118, 2, 2,
	159, 160, 7, 106, 2, 2, 160, 161, 7, 107, 2, 2, 161, 162, 7, 112, 2, 2,
	162, 34, 3, 2, 2, 2, 163, 164, 7, 101, 2, 2, 164, 165, 7, 106, 2, 2, 165,
	166, 7, 103, 2, 2, 166, 167, 7, 101, 2, 2, 167, 168, 7, 109, 2, 2, 168,
	169, 7, 47, 2, 2, 169, 170, 7, 111, 2, 2, 170, 171, 7, 103, 2, 2, 171,
	172, 7, 111, 2, 2, 172, 173, 7, 100, 2, 2, 173, 174, 7, 103, 2, 2, 174,
	175, 7, 116, 2, 2, 175, 176, 7, 47, 2, 2, 176, 177, 7, 113, 2, 2, 177,
	178, 7, 104, 2, 2, 178, 36, 3, 2, 2, 2, 179, 180, 7, 101, 2, 2, 180, 181,
	7, 106, 2, 2, 181, 182, 7, 103, 2, 2, 182, 183, 7, 101, 2, 2, 183, 184,
	7, 109, 2, 2, 184, 185, 7, 47, 2, 2, 185, 186, 7, 117, 2, 2, 186, 187,
	7, 99, 2, 2, 187, 188, 7, 118, 2, 2, 188, 189, 7, 107, 2, 2, 189, 190,
	7, 117, 2, 2, 190, 191, 7, 104, 2, 2, 191, 192, 7, 107, 2, 2, 192, 193,
	7, 103, 2, 2, 193, 194, 7, 102, 2, 2, 194, 38, 3, 2, 2, 2, 195, 196, 7,
	101, 2, 2, 196, 197, 7, 106, 2, 2, 197, 198, 7, 103, 2, 2, 198, 199, 7,
	101, 2, 2, 199, 200, 7, 109, 2, 2, 200, 201, 7, 47, 2, 2, 201, 202, 7,
	103, 2, 2, 202, 203, 7, 116, 2, 2, 203, 204, 7, 116, 2, 2, 204, 205, 7,
	113, 2, 2, 205, 206, 7, 116, 2, 2, 206, 40, 3, 2, 2, 2, 207, 208, 7, 116,
	2, 2, 208, 209, 7, 103, 2, 2, 209, 210, 7, 115, 2, 2, 210, 211, 7, 119,
	2, 2, 211, 212, 7, 107, 2, 2, 212, 213, 7, 116, 2, 2, 213, 214, 7, 103,
	2, 2, 214, 42, 3, 2, 2, 2, 215, 216, 7, 8219, 2, 2, 216, 217, 5, 45, 23,
	2, 217, 44, 3, 2, 2, 2, 218, 220, 9, 2, 2, 2, 219, 218, 3, 2, 2, 2, 220,
	221, 3, 2, 2, 2, 221, 219, 3, 2, 2, 2, 221, 222, 3, 2, 2, 2, 222, 46, 3,
	2, 2, 2, 223, 239, 5, 49, 25, 2, 224, 225, 5, 49, 25, 2, 225, 229, 7, 48,
	2, 2, 226, 228, 9, 3, 2, 2, 227, 226, 3, 2, 2, 2, 228, 231, 3, 2, 2, 2,
	229, 227, 3, 2, 2, 2, 229, 230, 3, 2, 2, 2, 230, 232, 3, 2, 2, 2, 231,
	229, 3, 2, 2, 2, 232, 233, 9, 4, 2, 2, 233, 239, 3, 2, 2, 2, 234, 235,
	5, 49, 25, 2, 235, 236, 7, 49, 2, 2, 236, 237, 5, 49, 25, 2, 237, 239,
	3, 2, 2, 2, 238, 223, 3, 2, 2, 2, 238, 224, 3, 2, 2, 2, 238, 234, 3, 2,
	2, 2, 239, 48, 3, 2, 2, 2, 240, 244, 9, 4, 2, 2, 241, 243, 9, 3, 2, 2,
	242, 241, 3, 2, 2, 2, 243, 246, 3, 2, 2, 2, 244, 242, 3, 2, 2, 2, 244,
	245, 3, 2, 2, 2, 245, 249, 3, 2, 2, 2, 246, 244, 3, 2, 2, 2, 247, 249,
	7, 50, 2, 2, 248, 240, 3, 2, 2, 2, 248, 247, 3, 2, 2, 2, 249, 50, 3, 2,
	2, 2, 250, 251, 7, 37, 2, 2, 251, 252, 7, 118, 2, 2, 252, 253, 7, 116,
	2, 2, 253, 254, 7, 119, 2, 2, 254, 270, 7, 103, 2, 2, 255, 256, 7, 37,
	2, 2, 256, 270, 7, 86, 2, 2, 257, 258, 7, 37, 2, 2, 258, 270, 7, 118, 2,
	2, 259, 260, 7, 37, 2, 2, 260, 261, 7, 104, 2, 2, 261, 262, 7, 99, 2, 2,
	262, 263, 7, 110, 2, 2, 263, 264, 7, 117, 2, 2, 264, 270, 7, 103, 2, 2,
	265, 266, 7, 37, 2, 2, 266, 270, 7, 72, 2, 2, 267, 268, 7, 37, 2, 2, 268,
	270, 7, 104, 2, 2, 269, 250, 3, 2, 2, 2, 269, 255, 3, 2, 2, 2, 269, 257,
	3, 2, 2, 2, 269, 259, 3, 2, 2, 2, 269, 265, 3, 2, 2, 2, 269, 267, 3, 2,
	2, 2, 270, 52, 3, 2, 2, 2, 271, 275, 7, 36, 2, 2, 272, 274, 9, 5, 2, 2,
	273, 272, 3, 2, 2, 2, 274, 277, 3, 2, 2, 2, 275, 273, 3, 2, 2, 2, 275,
	276, 3, 2, 2, 2, 276, 278, 3, 2, 2, 2, 277, 275, 3, 2, 2, 2, 278, 279,
	7, 36, 2, 2, 279, 54, 3, 2, 2, 2, 280, 281, 7, 37, 2, 2, 281, 282, 7, 94,
	2, 2, 282, 291, 9, 6, 2, 2, 283, 284, 7, 37, 2, 2, 284, 285, 7, 94, 2,
	2, 285, 286, 7, 117, 2, 2, 286, 287, 7, 114, 2, 2, 287, 288, 7, 99, 2,
	2, 288, 289, 7, 101, 2, 2, 289, 291, 7, 103, 2, 2, 290, 280, 3, 2, 2, 2,
	290, 283, 3, 2, 2, 2, 291, 56, 3, 2, 2, 2, 292, 293, 7, 37, 2, 2, 293,
	294, 7, 110, 2, 2, 294, 295, 7, 99, 2, 2, 295, 296, 7, 112, 2, 2, 296,
	297, 7, 105, 2, 2, 297, 301, 3, 2, 2, 2, 298, 300, 10, 7, 2, 2, 299, 298,
	3, 2, 2, 2, 300, 303, 3, 2, 2, 2, 301, 299, 3, 2, 2, 2, 301, 302, 3, 2,
	2, 2, 302, 305, 3, 2, 2, 2, 303, 301, 3, 2, 2, 2, 304, 306, 7, 15, 2, 2,
	305, 304, 3, 2, 2, 2, 305, 306, 3, 2, 2, 2, 306, 307, 3, 2, 2, 2, 307,
	308, 7, 12, 2, 2, 308, 309, 3, 2, 2, 2, 309, 310, 8, 29, 2, 2, 310, 58,
	3, 2, 2, 2, 311, 315, 7, 61, 2, 2, 312, 314, 10, 7, 2, 2, 313, 312, 3,
	2, 2, 2, 314, 317, 3, 2, 2, 2, 315, 313, 3, 2, 2, 2, 315, 316, 3, 2, 2,
	2, 316, 319, 3, 2, 2, 2, 317, 315, 3, 2, 2, 2, 318, 320, 7, 15, 2, 2, 319,
	318, 3, 2, 2, 2, 319, 320, 3, 2, 2, 2, 320, 321, 3, 2, 2, 2, 321, 322,
	7, 12, 2, 2, 322, 323, 3, 2, 2, 2, 323, 324, 8, 30, 2, 2, 324, 60, 3, 2,
	2, 2, 325, 326, 9, 8, 2, 2, 326, 327, 3, 2, 2, 2, 327, 328, 8, 31, 2, 2,
	328, 62, 3, 2, 2, 2, 16, 2, 219, 221, 229, 238, 244, 248, 269, 275, 290,
	301, 305, 315, 319, 3, 2, 3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "'define'", "')'", "'lambda'", "'define-struct'", "'cond'",
	"'['", "']'", "'else '", "'if'", "'and'", "'or'", "'\u2019()'", "'check-expect'",
	"'check-random'", "'check-within'", "'check-member-of'", "'check-satisfied'",
	"'check-error'", "'require'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "SYMBOL", "NAME", "NUMBER", "INT", "BOOLEAN", "STRING", "CHARACTER",
	"LANG", "COMMENT", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "SYMBOL", "NAME", "NUMBER", "INT", "BOOLEAN",
	"STRING", "CHARACTER", "LANG", "COMMENT", "WS",
}

type BSLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewBSLLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *BSLLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewBSLLexer(input antlr.CharStream) *BSLLexer {
	l := new(BSLLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "BSL.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// BSLLexer tokens.
const (
	BSLLexerT__0      = 1
	BSLLexerT__1      = 2
	BSLLexerT__2      = 3
	BSLLexerT__3      = 4
	BSLLexerT__4      = 5
	BSLLexerT__5      = 6
	BSLLexerT__6      = 7
	BSLLexerT__7      = 8
	BSLLexerT__8      = 9
	BSLLexerT__9      = 10
	BSLLexerT__10     = 11
	BSLLexerT__11     = 12
	BSLLexerT__12     = 13
	BSLLexerT__13     = 14
	BSLLexerT__14     = 15
	BSLLexerT__15     = 16
	BSLLexerT__16     = 17
	BSLLexerT__17     = 18
	BSLLexerT__18     = 19
	BSLLexerT__19     = 20
	BSLLexerSYMBOL    = 21
	BSLLexerNAME      = 22
	BSLLexerNUMBER    = 23
	BSLLexerINT       = 24
	BSLLexerBOOLEAN   = 25
	BSLLexerSTRING    = 26
	BSLLexerCHARACTER = 27
	BSLLexerLANG      = 28
	BSLLexerCOMMENT   = 29
	BSLLexerWS        = 30
)
