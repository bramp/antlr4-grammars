// Code generated from RCS.g4 by ANTLR 4.9.3. DO NOT EDIT.

package rcs

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 29, 227,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3,
	5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3,
	9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3,
	11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18,
	3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3,
	21, 3, 21, 3, 21, 3, 21, 3, 22, 6, 22, 184, 10, 22, 13, 22, 14, 22, 185,
	3, 23, 6, 23, 189, 10, 23, 13, 23, 14, 23, 190, 3, 24, 3, 24, 3, 24, 7,
	24, 196, 10, 24, 12, 24, 14, 24, 199, 11, 24, 3, 25, 3, 25, 3, 25, 3, 25,
	7, 25, 205, 10, 25, 12, 25, 14, 25, 208, 11, 25, 3, 25, 3, 25, 3, 26, 3,
	26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 5, 28, 220, 10, 28, 6, 28,
	222, 10, 28, 13, 28, 14, 28, 223, 3, 28, 3, 28, 2, 2, 29, 3, 3, 5, 4, 7,
	5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27,
	15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45,
	24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 3, 2, 6, 10, 2, 11, 12, 14,
	15, 34, 34, 38, 38, 46, 46, 48, 48, 60, 61, 66, 66, 3, 2, 66, 66, 5, 2,
	11, 11, 14, 14, 34, 34, 4, 2, 12, 12, 15, 15, 2, 234, 2, 3, 3, 2, 2, 2,
	2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2,
	2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2,
	2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2,
	2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3,
	2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43,
	3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2,
	51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 3, 57, 3, 2, 2, 2,
	5, 63, 3, 2, 2, 2, 7, 68, 3, 2, 2, 2, 9, 74, 3, 2, 2, 2, 11, 81, 3, 2,
	2, 2, 13, 86, 3, 2, 2, 2, 15, 93, 3, 2, 2, 2, 17, 100, 3, 2, 2, 2, 19,
	108, 3, 2, 2, 2, 21, 114, 3, 2, 2, 2, 23, 121, 3, 2, 2, 2, 25, 129, 3,
	2, 2, 2, 27, 136, 3, 2, 2, 2, 29, 141, 3, 2, 2, 2, 31, 148, 3, 2, 2, 2,
	33, 154, 3, 2, 2, 2, 35, 163, 3, 2, 2, 2, 37, 168, 3, 2, 2, 2, 39, 173,
	3, 2, 2, 2, 41, 177, 3, 2, 2, 2, 43, 183, 3, 2, 2, 2, 45, 188, 3, 2, 2,
	2, 47, 192, 3, 2, 2, 2, 49, 200, 3, 2, 2, 2, 51, 211, 3, 2, 2, 2, 53, 213,
	3, 2, 2, 2, 55, 221, 3, 2, 2, 2, 57, 58, 7, 69, 2, 2, 58, 59, 7, 81, 2,
	2, 59, 60, 7, 79, 2, 2, 60, 61, 7, 79, 2, 2, 61, 62, 7, 67, 2, 2, 62, 4,
	3, 2, 2, 2, 63, 64, 7, 78, 2, 2, 64, 65, 7, 81, 2, 2, 65, 66, 7, 73, 2,
	2, 66, 67, 7, 85, 2, 2, 67, 6, 3, 2, 2, 2, 68, 69, 7, 67, 2, 2, 69, 70,
	7, 70, 2, 2, 70, 71, 7, 79, 2, 2, 71, 72, 7, 75, 2, 2, 72, 73, 7, 80, 2,
	2, 73, 8, 3, 2, 2, 2, 74, 75, 7, 70, 2, 2, 75, 76, 7, 71, 2, 2, 76, 77,
	7, 78, 2, 2, 77, 78, 7, 86, 2, 2, 78, 79, 7, 67, 2, 2, 79, 80, 7, 85, 2,
	2, 80, 10, 3, 2, 2, 2, 81, 82, 7, 106, 2, 2, 82, 83, 7, 103, 2, 2, 83,
	84, 7, 99, 2, 2, 84, 85, 7, 102, 2, 2, 85, 12, 3, 2, 2, 2, 86, 87, 7, 100,
	2, 2, 87, 88, 7, 116, 2, 2, 88, 89, 7, 99, 2, 2, 89, 90, 7, 112, 2, 2,
	90, 91, 7, 101, 2, 2, 91, 92, 7, 106, 2, 2, 92, 14, 3, 2, 2, 2, 93, 94,
	7, 99, 2, 2, 94, 95, 7, 101, 2, 2, 95, 96, 7, 101, 2, 2, 96, 97, 7, 103,
	2, 2, 97, 98, 7, 117, 2, 2, 98, 99, 7, 117, 2, 2, 99, 16, 3, 2, 2, 2, 100,
	101, 7, 117, 2, 2, 101, 102, 7, 123, 2, 2, 102, 103, 7, 111, 2, 2, 103,
	104, 7, 100, 2, 2, 104, 105, 7, 113, 2, 2, 105, 106, 7, 110, 2, 2, 106,
	107, 7, 117, 2, 2, 107, 18, 3, 2, 2, 2, 108, 109, 7, 110, 2, 2, 109, 110,
	7, 113, 2, 2, 110, 111, 7, 101, 2, 2, 111, 112, 7, 109, 2, 2, 112, 113,
	7, 117, 2, 2, 113, 20, 3, 2, 2, 2, 114, 115, 7, 117, 2, 2, 115, 116, 7,
	118, 2, 2, 116, 117, 7, 116, 2, 2, 117, 118, 7, 107, 2, 2, 118, 119, 7,
	101, 2, 2, 119, 120, 7, 118, 2, 2, 120, 22, 3, 2, 2, 2, 121, 122, 7, 101,
	2, 2, 122, 123, 7, 113, 2, 2, 123, 124, 7, 111, 2, 2, 124, 125, 7, 111,
	2, 2, 125, 126, 7, 103, 2, 2, 126, 127, 7, 112, 2, 2, 127, 128, 7, 118,
	2, 2, 128, 24, 3, 2, 2, 2, 129, 130, 7, 103, 2, 2, 130, 131, 7, 122, 2,
	2, 131, 132, 7, 114, 2, 2, 132, 133, 7, 99, 2, 2, 133, 134, 7, 112, 2,
	2, 134, 135, 7, 102, 2, 2, 135, 26, 3, 2, 2, 2, 136, 137, 7, 102, 2, 2,
	137, 138, 7, 99, 2, 2, 138, 139, 7, 118, 2, 2, 139, 140, 7, 103, 2, 2,
	140, 28, 3, 2, 2, 2, 141, 142, 7, 99, 2, 2, 142, 143, 7, 119, 2, 2, 143,
	144, 7, 118, 2, 2, 144, 145, 7, 106, 2, 2, 145, 146, 7, 113, 2, 2, 146,
	147, 7, 116, 2, 2, 147, 30, 3, 2, 2, 2, 148, 149, 7, 117, 2, 2, 149, 150,
	7, 118, 2, 2, 150, 151, 7, 99, 2, 2, 151, 152, 7, 118, 2, 2, 152, 153,
	7, 103, 2, 2, 153, 32, 3, 2, 2, 2, 154, 155, 7, 100, 2, 2, 155, 156, 7,
	116, 2, 2, 156, 157, 7, 99, 2, 2, 157, 158, 7, 112, 2, 2, 158, 159, 7,
	101, 2, 2, 159, 160, 7, 106, 2, 2, 160, 161, 7, 103, 2, 2, 161, 162, 7,
	117, 2, 2, 162, 34, 3, 2, 2, 2, 163, 164, 7, 112, 2, 2, 164, 165, 7, 103,
	2, 2, 165, 166, 7, 122, 2, 2, 166, 167, 7, 118, 2, 2, 167, 36, 3, 2, 2,
	2, 168, 169, 7, 102, 2, 2, 169, 170, 7, 103, 2, 2, 170, 171, 7, 117, 2,
	2, 171, 172, 7, 101, 2, 2, 172, 38, 3, 2, 2, 2, 173, 174, 7, 110, 2, 2,
	174, 175, 7, 113, 2, 2, 175, 176, 7, 105, 2, 2, 176, 40, 3, 2, 2, 2, 177,
	178, 7, 118, 2, 2, 178, 179, 7, 103, 2, 2, 179, 180, 7, 122, 2, 2, 180,
	181, 7, 118, 2, 2, 181, 42, 3, 2, 2, 2, 182, 184, 10, 2, 2, 2, 183, 182,
	3, 2, 2, 2, 184, 185, 3, 2, 2, 2, 185, 183, 3, 2, 2, 2, 185, 186, 3, 2,
	2, 2, 186, 44, 3, 2, 2, 2, 187, 189, 4, 50, 59, 2, 188, 187, 3, 2, 2, 2,
	189, 190, 3, 2, 2, 2, 190, 188, 3, 2, 2, 2, 190, 191, 3, 2, 2, 2, 191,
	46, 3, 2, 2, 2, 192, 197, 5, 45, 23, 2, 193, 194, 7, 48, 2, 2, 194, 196,
	5, 45, 23, 2, 195, 193, 3, 2, 2, 2, 196, 199, 3, 2, 2, 2, 197, 195, 3,
	2, 2, 2, 197, 198, 3, 2, 2, 2, 198, 48, 3, 2, 2, 2, 199, 197, 3, 2, 2,
	2, 200, 206, 7, 66, 2, 2, 201, 205, 10, 3, 2, 2, 202, 203, 7, 66, 2, 2,
	203, 205, 7, 66, 2, 2, 204, 201, 3, 2, 2, 2, 204, 202, 3, 2, 2, 2, 205,
	208, 3, 2, 2, 2, 206, 204, 3, 2, 2, 2, 206, 207, 3, 2, 2, 2, 207, 209,
	3, 2, 2, 2, 208, 206, 3, 2, 2, 2, 209, 210, 7, 66, 2, 2, 210, 50, 3, 2,
	2, 2, 211, 212, 7, 61, 2, 2, 212, 52, 3, 2, 2, 2, 213, 214, 7, 60, 2, 2,
	214, 54, 3, 2, 2, 2, 215, 222, 9, 4, 2, 2, 216, 217, 7, 15, 2, 2, 217,
	220, 7, 12, 2, 2, 218, 220, 9, 5, 2, 2, 219, 216, 3, 2, 2, 2, 219, 218,
	3, 2, 2, 2, 220, 222, 3, 2, 2, 2, 221, 215, 3, 2, 2, 2, 221, 219, 3, 2,
	2, 2, 222, 223, 3, 2, 2, 2, 223, 221, 3, 2, 2, 2, 223, 224, 3, 2, 2, 2,
	224, 225, 3, 2, 2, 2, 225, 226, 8, 28, 2, 2, 226, 56, 3, 2, 2, 2, 11, 2,
	185, 190, 197, 204, 206, 219, 221, 223, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'COMMA'", "'LOGS'", "'ADMIN'", "'DELTAS'", "'head'", "'branch'", "'access'",
	"'symbols'", "'locks'", "'strict'", "'comment'", "'expand'", "'date'",
	"'author'", "'state'", "'branches'", "'next'", "'desc'", "'log'", "'text'",
	"", "", "", "", "';'", "':'",
}

var lexerSymbolicNames = []string{
	"", "COMMA", "LOGS", "ADMIN", "DELTAS", "LITERAL_HEAD", "LITERAL_BRANCH",
	"LITERAL_ACCESS", "LITERAL_SYMBOLS", "LITERAL_LOCKS", "LITERAL_STRICT",
	"LITERAL_COMMENT", "LITERAL_EXPAND", "LITERAL_DATE", "LITERAL_AUTHOR",
	"LITERAL_STATE", "LITERAL_BRANCHES", "LITERAL_NEXT", "LITERAL_DESC", "LITERAL_LOG",
	"LITERAL_TEXT", "IDENT", "INT", "REVISION", "STRING", "SEMI", "COLON",
	"WS",
}

var lexerRuleNames = []string{
	"COMMA", "LOGS", "ADMIN", "DELTAS", "LITERAL_HEAD", "LITERAL_BRANCH", "LITERAL_ACCESS",
	"LITERAL_SYMBOLS", "LITERAL_LOCKS", "LITERAL_STRICT", "LITERAL_COMMENT",
	"LITERAL_EXPAND", "LITERAL_DATE", "LITERAL_AUTHOR", "LITERAL_STATE", "LITERAL_BRANCHES",
	"LITERAL_NEXT", "LITERAL_DESC", "LITERAL_LOG", "LITERAL_TEXT", "IDENT",
	"INT", "REVISION", "STRING", "SEMI", "COLON", "WS",
}

type RCSLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewRCSLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *RCSLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewRCSLexer(input antlr.CharStream) *RCSLexer {
	l := new(RCSLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "RCS.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// RCSLexer tokens.
const (
	RCSLexerCOMMA            = 1
	RCSLexerLOGS             = 2
	RCSLexerADMIN            = 3
	RCSLexerDELTAS           = 4
	RCSLexerLITERAL_HEAD     = 5
	RCSLexerLITERAL_BRANCH   = 6
	RCSLexerLITERAL_ACCESS   = 7
	RCSLexerLITERAL_SYMBOLS  = 8
	RCSLexerLITERAL_LOCKS    = 9
	RCSLexerLITERAL_STRICT   = 10
	RCSLexerLITERAL_COMMENT  = 11
	RCSLexerLITERAL_EXPAND   = 12
	RCSLexerLITERAL_DATE     = 13
	RCSLexerLITERAL_AUTHOR   = 14
	RCSLexerLITERAL_STATE    = 15
	RCSLexerLITERAL_BRANCHES = 16
	RCSLexerLITERAL_NEXT     = 17
	RCSLexerLITERAL_DESC     = 18
	RCSLexerLITERAL_LOG      = 19
	RCSLexerLITERAL_TEXT     = 20
	RCSLexerIDENT            = 21
	RCSLexerINT              = 22
	RCSLexerREVISION         = 23
	RCSLexerSTRING           = 24
	RCSLexerSEMI             = 25
	RCSLexerCOLON            = 26
	RCSLexerWS               = 27
)
