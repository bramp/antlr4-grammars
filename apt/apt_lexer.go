// Code generated from apt.g4 by ANTLR 4.9.3. DO NOT EDIT.

package apt

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 21, 280,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 2, 3, 2, 5, 2, 52, 10, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 234, 10, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 6, 5, 244, 10, 5, 13, 5, 14, 5,
	245, 3, 6, 6, 6, 249, 10, 6, 13, 6, 14, 6, 250, 3, 7, 3, 7, 3, 8, 3, 8,
	3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3,
	14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19,
	3, 19, 3, 20, 3, 20, 2, 2, 21, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15,
	9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33,
	18, 35, 19, 37, 20, 39, 21, 3, 2, 6, 4, 2, 11, 15, 34, 34, 3, 2, 48, 49,
	6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 11, 2, 11, 15, 34, 34, 36, 37, 41,
	41, 45, 60, 63, 63, 67, 95, 97, 97, 99, 124, 2, 297, 2, 3, 3, 2, 2, 2,
	2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2,
	2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2,
	2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2,
	2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3,
	2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 3, 51, 3, 2, 2, 2, 5, 233,
	3, 2, 2, 2, 7, 235, 3, 2, 2, 2, 9, 243, 3, 2, 2, 2, 11, 248, 3, 2, 2, 2,
	13, 252, 3, 2, 2, 2, 15, 254, 3, 2, 2, 2, 17, 256, 3, 2, 2, 2, 19, 258,
	3, 2, 2, 2, 21, 260, 3, 2, 2, 2, 23, 262, 3, 2, 2, 2, 25, 264, 3, 2, 2,
	2, 27, 266, 3, 2, 2, 2, 29, 268, 3, 2, 2, 2, 31, 270, 3, 2, 2, 2, 33, 272,
	3, 2, 2, 2, 35, 274, 3, 2, 2, 2, 37, 276, 3, 2, 2, 2, 39, 278, 3, 2, 2,
	2, 41, 42, 7, 102, 2, 2, 42, 43, 7, 103, 2, 2, 43, 52, 7, 100, 2, 2, 44,
	45, 7, 102, 2, 2, 45, 46, 7, 103, 2, 2, 46, 47, 7, 100, 2, 2, 47, 48, 7,
	47, 2, 2, 48, 49, 7, 117, 2, 2, 49, 50, 7, 116, 2, 2, 50, 52, 7, 101, 2,
	2, 51, 41, 3, 2, 2, 2, 51, 44, 3, 2, 2, 2, 52, 4, 3, 2, 2, 2, 53, 54, 7,
	99, 2, 2, 54, 55, 7, 116, 2, 2, 55, 56, 7, 101, 2, 2, 56, 234, 7, 106,
	2, 2, 57, 58, 7, 110, 2, 2, 58, 59, 7, 99, 2, 2, 59, 60, 7, 112, 2, 2,
	60, 234, 7, 105, 2, 2, 61, 62, 7, 118, 2, 2, 62, 63, 7, 99, 2, 2, 63, 64,
	7, 116, 2, 2, 64, 65, 7, 105, 2, 2, 65, 66, 7, 103, 2, 2, 66, 234, 7, 118,
	2, 2, 67, 68, 7, 114, 2, 2, 68, 69, 7, 102, 2, 2, 69, 70, 7, 107, 2, 2,
	70, 71, 7, 104, 2, 2, 71, 72, 7, 104, 2, 2, 72, 234, 7, 117, 2, 2, 73,
	74, 7, 100, 2, 2, 74, 75, 7, 123, 2, 2, 75, 76, 7, 47, 2, 2, 76, 77, 7,
	106, 2, 2, 77, 78, 7, 99, 2, 2, 78, 79, 7, 117, 2, 2, 79, 234, 7, 106,
	2, 2, 80, 81, 7, 120, 2, 2, 81, 82, 7, 99, 2, 2, 82, 83, 7, 110, 2, 2,
	83, 84, 7, 107, 2, 2, 84, 85, 7, 102, 2, 2, 85, 86, 7, 47, 2, 2, 86, 87,
	7, 119, 2, 2, 87, 88, 7, 112, 2, 2, 88, 89, 7, 118, 2, 2, 89, 90, 7, 107,
	2, 2, 90, 91, 7, 110, 2, 2, 91, 92, 7, 47, 2, 2, 92, 93, 7, 111, 2, 2,
	93, 94, 7, 99, 2, 2, 94, 234, 7, 122, 2, 2, 95, 96, 7, 99, 2, 2, 96, 97,
	7, 110, 2, 2, 97, 98, 7, 110, 2, 2, 98, 99, 7, 113, 2, 2, 99, 100, 7, 121,
	2, 2, 100, 101, 7, 47, 2, 2, 101, 102, 7, 102, 2, 2, 102, 103, 7, 113,
	2, 2, 103, 104, 7, 121, 2, 2, 104, 105, 7, 112, 2, 2, 105, 106, 7, 105,
	2, 2, 106, 107, 7, 116, 2, 2, 107, 108, 7, 99, 2, 2, 108, 109, 7, 102,
	2, 2, 109, 110, 7, 103, 2, 2, 110, 111, 7, 47, 2, 2, 111, 112, 7, 118,
	2, 2, 112, 113, 7, 113, 2, 2, 113, 114, 7, 47, 2, 2, 114, 115, 7, 107,
	2, 2, 115, 116, 7, 112, 2, 2, 116, 117, 7, 117, 2, 2, 117, 118, 7, 103,
	2, 2, 118, 119, 7, 101, 2, 2, 119, 120, 7, 119, 2, 2, 120, 121, 7, 116,
	2, 2, 121, 234, 7, 103, 2, 2, 122, 123, 7, 99, 2, 2, 123, 124, 7, 110,
	2, 2, 124, 125, 7, 110, 2, 2, 125, 126, 7, 113, 2, 2, 126, 127, 7, 121,
	2, 2, 127, 128, 7, 47, 2, 2, 128, 129, 7, 121, 2, 2, 129, 130, 7, 103,
	2, 2, 130, 131, 7, 99, 2, 2, 131, 234, 7, 109, 2, 2, 132, 133, 7, 99, 2,
	2, 133, 134, 7, 110, 2, 2, 134, 135, 7, 110, 2, 2, 135, 136, 7, 113, 2,
	2, 136, 137, 7, 121, 2, 2, 137, 138, 7, 47, 2, 2, 138, 139, 7, 107, 2,
	2, 139, 140, 7, 112, 2, 2, 140, 141, 7, 117, 2, 2, 141, 142, 7, 103, 2,
	2, 142, 143, 7, 101, 2, 2, 143, 144, 7, 119, 2, 2, 144, 145, 7, 116, 2,
	2, 145, 234, 7, 103, 2, 2, 146, 147, 7, 118, 2, 2, 147, 148, 7, 116, 2,
	2, 148, 149, 7, 119, 2, 2, 149, 150, 7, 117, 2, 2, 150, 151, 7, 118, 2,
	2, 151, 152, 7, 103, 2, 2, 152, 234, 7, 102, 2, 2, 153, 154, 7, 117, 2,
	2, 154, 155, 7, 107, 2, 2, 155, 156, 7, 105, 2, 2, 156, 157, 7, 112, 2,
	2, 157, 158, 7, 103, 2, 2, 158, 159, 7, 102, 2, 2, 159, 160, 7, 47, 2,
	2, 160, 161, 7, 100, 2, 2, 161, 234, 7, 123, 2, 2, 162, 163, 7, 101, 2,
	2, 163, 164, 7, 106, 2, 2, 164, 165, 7, 103, 2, 2, 165, 166, 7, 101, 2,
	2, 166, 167, 7, 109, 2, 2, 167, 168, 7, 47, 2, 2, 168, 169, 7, 120, 2,
	2, 169, 170, 7, 99, 2, 2, 170, 171, 7, 110, 2, 2, 171, 172, 7, 107, 2,
	2, 172, 173, 7, 102, 2, 2, 173, 174, 7, 47, 2, 2, 174, 175, 7, 119, 2,
	2, 175, 176, 7, 112, 2, 2, 176, 177, 7, 118, 2, 2, 177, 178, 7, 107, 2,
	2, 178, 234, 7, 110, 2, 2, 179, 180, 7, 120, 2, 2, 180, 181, 7, 99, 2,
	2, 181, 182, 7, 110, 2, 2, 182, 183, 7, 107, 2, 2, 183, 184, 7, 102, 2,
	2, 184, 185, 7, 47, 2, 2, 185, 186, 7, 119, 2, 2, 186, 187, 7, 112, 2,
	2, 187, 188, 7, 118, 2, 2, 188, 189, 7, 107, 2, 2, 189, 190, 7, 110, 2,
	2, 190, 191, 7, 47, 2, 2, 191, 192, 7, 111, 2, 2, 192, 193, 7, 107, 2,
	2, 193, 234, 7, 112, 2, 2, 194, 195, 7, 101, 2, 2, 195, 196, 7, 106, 2,
	2, 196, 197, 7, 103, 2, 2, 197, 198, 7, 101, 2, 2, 198, 199, 7, 109, 2,
	2, 199, 200, 7, 47, 2, 2, 200, 201, 7, 102, 2, 2, 201, 202, 7, 99, 2, 2,
	202, 203, 7, 118, 2, 2, 203, 234, 7, 103, 2, 2, 204, 205, 7, 107, 2, 2,
	205, 206, 7, 112, 2, 2, 206, 207, 7, 116, 2, 2, 207, 208, 7, 103, 2, 2,
	208, 209, 7, 110, 2, 2, 209, 210, 7, 103, 2, 2, 210, 211, 7, 99, 2, 2,
	211, 212, 7, 117, 2, 2, 212, 213, 7, 103, 2, 2, 213, 214, 7, 47, 2, 2,
	214, 215, 7, 114, 2, 2, 215, 216, 7, 99, 2, 2, 216, 217, 7, 118, 2, 2,
	217, 234, 7, 106, 2, 2, 218, 219, 7, 102, 2, 2, 219, 220, 7, 99, 2, 2,
	220, 221, 7, 118, 2, 2, 221, 222, 7, 103, 2, 2, 222, 223, 7, 47, 2, 2,
	223, 224, 7, 111, 2, 2, 224, 225, 7, 99, 2, 2, 225, 226, 7, 122, 2, 2,
	226, 227, 7, 47, 2, 2, 227, 228, 7, 104, 2, 2, 228, 229, 7, 119, 2, 2,
	229, 230, 7, 118, 2, 2, 230, 231, 7, 119, 2, 2, 231, 232, 7, 116, 2, 2,
	232, 234, 7, 103, 2, 2, 233, 53, 3, 2, 2, 2, 233, 57, 3, 2, 2, 2, 233,
	61, 3, 2, 2, 2, 233, 67, 3, 2, 2, 2, 233, 73, 3, 2, 2, 2, 233, 80, 3, 2,
	2, 2, 233, 95, 3, 2, 2, 2, 233, 122, 3, 2, 2, 2, 233, 132, 3, 2, 2, 2,
	233, 146, 3, 2, 2, 2, 233, 153, 3, 2, 2, 2, 233, 162, 3, 2, 2, 2, 233,
	179, 3, 2, 2, 2, 233, 194, 3, 2, 2, 2, 233, 204, 3, 2, 2, 2, 233, 218,
	3, 2, 2, 2, 234, 6, 3, 2, 2, 2, 235, 236, 7, 101, 2, 2, 236, 237, 7, 102,
	2, 2, 237, 238, 7, 116, 2, 2, 238, 239, 7, 113, 2, 2, 239, 240, 7, 111,
	2, 2, 240, 241, 7, 60, 2, 2, 241, 8, 3, 2, 2, 2, 242, 244, 5, 37, 19, 2,
	243, 242, 3, 2, 2, 2, 244, 245, 3, 2, 2, 2, 245, 243, 3, 2, 2, 2, 245,
	246, 3, 2, 2, 2, 246, 10, 3, 2, 2, 2, 247, 249, 5, 13, 7, 2, 248, 247,
	3, 2, 2, 2, 249, 250, 3, 2, 2, 2, 250, 248, 3, 2, 2, 2, 250, 251, 3, 2,
	2, 2, 251, 12, 3, 2, 2, 2, 252, 253, 9, 2, 2, 2, 253, 14, 3, 2, 2, 2, 254,
	255, 9, 3, 2, 2, 255, 16, 3, 2, 2, 2, 256, 257, 7, 93, 2, 2, 257, 18, 3,
	2, 2, 2, 258, 259, 7, 95, 2, 2, 259, 20, 3, 2, 2, 2, 260, 261, 7, 63, 2,
	2, 261, 22, 3, 2, 2, 2, 262, 263, 7, 37, 2, 2, 263, 24, 3, 2, 2, 2, 264,
	265, 7, 45, 2, 2, 265, 26, 3, 2, 2, 2, 266, 267, 7, 60, 2, 2, 267, 28,
	3, 2, 2, 2, 268, 269, 7, 46, 2, 2, 269, 30, 3, 2, 2, 2, 270, 271, 7, 47,
	2, 2, 271, 32, 3, 2, 2, 2, 272, 273, 7, 41, 2, 2, 273, 34, 3, 2, 2, 2,
	274, 275, 7, 36, 2, 2, 275, 36, 3, 2, 2, 2, 276, 277, 9, 4, 2, 2, 277,
	38, 3, 2, 2, 2, 278, 279, 10, 5, 2, 2, 279, 40, 3, 2, 2, 2, 7, 2, 51, 233,
	245, 250, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "'cdrom:'", "", "", "", "", "'['", "']'", "'='", "'#'", "'+'",
	"':'", "','", "'-'", "'''", "'\"'",
}

var lexerSymbolicNames = []string{
	"", "TypeR", "OptionName", "CdromSchema", "Word", "WSS", "WS", "PunctuationAllowedInOptionValue",
	"OptionsStart", "OptionsEnd", "OptionNameValueSeparator", "CommentMarker",
	"Plus", "Colon", "OptionsSeparator", "Dash", "SingleTick", "DoubleTick",
	"WordChar", "NonWhitespaceNonOptionValueNonSquareRightBracketNonEq",
}

var lexerRuleNames = []string{
	"TypeR", "OptionName", "CdromSchema", "Word", "WSS", "WS", "PunctuationAllowedInOptionValue",
	"OptionsStart", "OptionsEnd", "OptionNameValueSeparator", "CommentMarker",
	"Plus", "Colon", "OptionsSeparator", "Dash", "SingleTick", "DoubleTick",
	"WordChar", "NonWhitespaceNonOptionValueNonSquareRightBracketNonEq",
}

type aptLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewaptLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *aptLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewaptLexer(input antlr.CharStream) *aptLexer {
	l := new(aptLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "apt.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// aptLexer tokens.
const (
	aptLexerTypeR                                                 = 1
	aptLexerOptionName                                            = 2
	aptLexerCdromSchema                                           = 3
	aptLexerWord                                                  = 4
	aptLexerWSS                                                   = 5
	aptLexerWS                                                    = 6
	aptLexerPunctuationAllowedInOptionValue                       = 7
	aptLexerOptionsStart                                          = 8
	aptLexerOptionsEnd                                            = 9
	aptLexerOptionNameValueSeparator                              = 10
	aptLexerCommentMarker                                         = 11
	aptLexerPlus                                                  = 12
	aptLexerColon                                                 = 13
	aptLexerOptionsSeparator                                      = 14
	aptLexerDash                                                  = 15
	aptLexerSingleTick                                            = 16
	aptLexerDoubleTick                                            = 17
	aptLexerWordChar                                              = 18
	aptLexerNonWhitespaceNonOptionValueNonSquareRightBracketNonEq = 19
)
