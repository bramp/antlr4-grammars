// Code generated from xdr.g4 by ANTLR 4.9.3. DO NOT EDIT.

package xdr

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 39, 273,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 3,
	2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3,
	9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3,
	10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30,
	3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3,
	32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 33, 7, 33, 226, 10, 33,
	12, 33, 14, 33, 229, 11, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 34,
	3, 34, 3, 34, 7, 34, 239, 10, 34, 12, 34, 14, 34, 242, 11, 34, 3, 35, 5,
	35, 245, 10, 35, 3, 35, 6, 35, 248, 10, 35, 13, 35, 14, 35, 249, 3, 36,
	3, 36, 3, 36, 3, 36, 6, 36, 256, 10, 36, 13, 36, 14, 36, 257, 3, 37, 3,
	37, 7, 37, 262, 10, 37, 12, 37, 14, 37, 265, 11, 37, 3, 38, 6, 38, 268,
	10, 38, 13, 38, 14, 38, 269, 3, 38, 3, 38, 3, 227, 2, 39, 3, 3, 5, 4, 7,
	5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27,
	15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45,
	24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63,
	33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 3, 2, 9, 3, 2, 51,
	57, 3, 2, 50, 57, 3, 2, 50, 59, 5, 2, 50, 59, 67, 72, 99, 104, 4, 2, 67,
	92, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 5, 2, 11, 12, 15, 15,
	34, 34, 2, 279, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2,
	9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2,
	2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2,
	2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2,
	2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3,
	2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47,
	3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2,
	55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2,
	2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2,
	2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 3, 77, 3, 2,
	2, 2, 5, 79, 3, 2, 2, 2, 7, 81, 3, 2, 2, 2, 9, 83, 3, 2, 2, 2, 11, 85,
	3, 2, 2, 2, 13, 92, 3, 2, 2, 2, 15, 99, 3, 2, 2, 2, 17, 101, 3, 2, 2, 2,
	19, 106, 3, 2, 2, 2, 21, 115, 3, 2, 2, 2, 23, 119, 3, 2, 2, 2, 25, 125,
	3, 2, 2, 2, 27, 131, 3, 2, 2, 2, 29, 138, 3, 2, 2, 2, 31, 148, 3, 2, 2,
	2, 33, 153, 3, 2, 2, 2, 35, 158, 3, 2, 2, 2, 37, 160, 3, 2, 2, 2, 39, 162,
	3, 2, 2, 2, 41, 164, 3, 2, 2, 2, 43, 166, 3, 2, 2, 2, 45, 173, 3, 2, 2,
	2, 47, 175, 3, 2, 2, 2, 49, 181, 3, 2, 2, 2, 51, 188, 3, 2, 2, 2, 53, 190,
	3, 2, 2, 2, 55, 192, 3, 2, 2, 2, 57, 200, 3, 2, 2, 2, 59, 202, 3, 2, 2,
	2, 61, 207, 3, 2, 2, 2, 63, 213, 3, 2, 2, 2, 65, 221, 3, 2, 2, 2, 67, 235,
	3, 2, 2, 2, 69, 244, 3, 2, 2, 2, 71, 251, 3, 2, 2, 2, 73, 259, 3, 2, 2,
	2, 75, 267, 3, 2, 2, 2, 77, 78, 7, 93, 2, 2, 78, 4, 3, 2, 2, 2, 79, 80,
	7, 95, 2, 2, 80, 6, 3, 2, 2, 2, 81, 82, 7, 62, 2, 2, 82, 8, 3, 2, 2, 2,
	83, 84, 7, 64, 2, 2, 84, 10, 3, 2, 2, 2, 85, 86, 7, 113, 2, 2, 86, 87,
	7, 114, 2, 2, 87, 88, 7, 99, 2, 2, 88, 89, 7, 115, 2, 2, 89, 90, 7, 119,
	2, 2, 90, 91, 7, 103, 2, 2, 91, 12, 3, 2, 2, 2, 92, 93, 7, 117, 2, 2, 93,
	94, 7, 118, 2, 2, 94, 95, 7, 116, 2, 2, 95, 96, 7, 107, 2, 2, 96, 97, 7,
	112, 2, 2, 97, 98, 7, 105, 2, 2, 98, 14, 3, 2, 2, 2, 99, 100, 7, 44, 2,
	2, 100, 16, 3, 2, 2, 2, 101, 102, 7, 120, 2, 2, 102, 103, 7, 113, 2, 2,
	103, 104, 7, 107, 2, 2, 104, 105, 7, 102, 2, 2, 105, 18, 3, 2, 2, 2, 106,
	107, 7, 119, 2, 2, 107, 108, 7, 112, 2, 2, 108, 109, 7, 117, 2, 2, 109,
	110, 7, 107, 2, 2, 110, 111, 7, 105, 2, 2, 111, 112, 7, 112, 2, 2, 112,
	113, 7, 103, 2, 2, 113, 114, 7, 102, 2, 2, 114, 20, 3, 2, 2, 2, 115, 116,
	7, 107, 2, 2, 116, 117, 7, 112, 2, 2, 117, 118, 7, 118, 2, 2, 118, 22,
	3, 2, 2, 2, 119, 120, 7, 106, 2, 2, 120, 121, 7, 123, 2, 2, 121, 122, 7,
	114, 2, 2, 122, 123, 7, 103, 2, 2, 123, 124, 7, 116, 2, 2, 124, 24, 3,
	2, 2, 2, 125, 126, 7, 104, 2, 2, 126, 127, 7, 110, 2, 2, 127, 128, 7, 113,
	2, 2, 128, 129, 7, 99, 2, 2, 129, 130, 7, 118, 2, 2, 130, 26, 3, 2, 2,
	2, 131, 132, 7, 102, 2, 2, 132, 133, 7, 113, 2, 2, 133, 134, 7, 119, 2,
	2, 134, 135, 7, 100, 2, 2, 135, 136, 7, 110, 2, 2, 136, 137, 7, 103, 2,
	2, 137, 28, 3, 2, 2, 2, 138, 139, 7, 115, 2, 2, 139, 140, 7, 119, 2, 2,
	140, 141, 7, 99, 2, 2, 141, 142, 7, 102, 2, 2, 142, 143, 7, 116, 2, 2,
	143, 144, 7, 119, 2, 2, 144, 145, 7, 114, 2, 2, 145, 146, 7, 110, 2, 2,
	146, 147, 7, 103, 2, 2, 147, 30, 3, 2, 2, 2, 148, 149, 7, 100, 2, 2, 149,
	150, 7, 113, 2, 2, 150, 151, 7, 113, 2, 2, 151, 152, 7, 110, 2, 2, 152,
	32, 3, 2, 2, 2, 153, 154, 7, 103, 2, 2, 154, 155, 7, 112, 2, 2, 155, 156,
	7, 119, 2, 2, 156, 157, 7, 111, 2, 2, 157, 34, 3, 2, 2, 2, 158, 159, 7,
	125, 2, 2, 159, 36, 3, 2, 2, 2, 160, 161, 7, 63, 2, 2, 161, 38, 3, 2, 2,
	2, 162, 163, 7, 46, 2, 2, 163, 40, 3, 2, 2, 2, 164, 165, 7, 127, 2, 2,
	165, 42, 3, 2, 2, 2, 166, 167, 7, 117, 2, 2, 167, 168, 7, 118, 2, 2, 168,
	169, 7, 116, 2, 2, 169, 170, 7, 119, 2, 2, 170, 171, 7, 101, 2, 2, 171,
	172, 7, 118, 2, 2, 172, 44, 3, 2, 2, 2, 173, 174, 7, 61, 2, 2, 174, 46,
	3, 2, 2, 2, 175, 176, 7, 119, 2, 2, 176, 177, 7, 112, 2, 2, 177, 178, 7,
	107, 2, 2, 178, 179, 7, 113, 2, 2, 179, 180, 7, 112, 2, 2, 180, 48, 3,
	2, 2, 2, 181, 182, 7, 117, 2, 2, 182, 183, 7, 121, 2, 2, 183, 184, 7, 107,
	2, 2, 184, 185, 7, 118, 2, 2, 185, 186, 7, 101, 2, 2, 186, 187, 7, 106,
	2, 2, 187, 50, 3, 2, 2, 2, 188, 189, 7, 42, 2, 2, 189, 52, 3, 2, 2, 2,
	190, 191, 7, 43, 2, 2, 191, 54, 3, 2, 2, 2, 192, 193, 7, 102, 2, 2, 193,
	194, 7, 103, 2, 2, 194, 195, 7, 104, 2, 2, 195, 196, 7, 99, 2, 2, 196,
	197, 7, 119, 2, 2, 197, 198, 7, 110, 2, 2, 198, 199, 7, 118, 2, 2, 199,
	56, 3, 2, 2, 2, 200, 201, 7, 60, 2, 2, 201, 58, 3, 2, 2, 2, 202, 203, 7,
	101, 2, 2, 203, 204, 7, 99, 2, 2, 204, 205, 7, 117, 2, 2, 205, 206, 7,
	103, 2, 2, 206, 60, 3, 2, 2, 2, 207, 208, 7, 101, 2, 2, 208, 209, 7, 113,
	2, 2, 209, 210, 7, 112, 2, 2, 210, 211, 7, 117, 2, 2, 211, 212, 7, 118,
	2, 2, 212, 62, 3, 2, 2, 2, 213, 214, 7, 118, 2, 2, 214, 215, 7, 123, 2,
	2, 215, 216, 7, 114, 2, 2, 216, 217, 7, 103, 2, 2, 217, 218, 7, 102, 2,
	2, 218, 219, 7, 103, 2, 2, 219, 220, 7, 104, 2, 2, 220, 64, 3, 2, 2, 2,
	221, 222, 7, 49, 2, 2, 222, 223, 7, 44, 2, 2, 223, 227, 3, 2, 2, 2, 224,
	226, 11, 2, 2, 2, 225, 224, 3, 2, 2, 2, 226, 229, 3, 2, 2, 2, 227, 228,
	3, 2, 2, 2, 227, 225, 3, 2, 2, 2, 228, 230, 3, 2, 2, 2, 229, 227, 3, 2,
	2, 2, 230, 231, 7, 44, 2, 2, 231, 232, 7, 49, 2, 2, 232, 233, 3, 2, 2,
	2, 233, 234, 8, 33, 2, 2, 234, 66, 3, 2, 2, 2, 235, 236, 7, 50, 2, 2, 236,
	240, 9, 2, 2, 2, 237, 239, 9, 3, 2, 2, 238, 237, 3, 2, 2, 2, 239, 242,
	3, 2, 2, 2, 240, 238, 3, 2, 2, 2, 240, 241, 3, 2, 2, 2, 241, 68, 3, 2,
	2, 2, 242, 240, 3, 2, 2, 2, 243, 245, 7, 47, 2, 2, 244, 243, 3, 2, 2, 2,
	244, 245, 3, 2, 2, 2, 245, 247, 3, 2, 2, 2, 246, 248, 9, 4, 2, 2, 247,
	246, 3, 2, 2, 2, 248, 249, 3, 2, 2, 2, 249, 247, 3, 2, 2, 2, 249, 250,
	3, 2, 2, 2, 250, 70, 3, 2, 2, 2, 251, 252, 7, 50, 2, 2, 252, 253, 7, 122,
	2, 2, 253, 255, 3, 2, 2, 2, 254, 256, 9, 5, 2, 2, 255, 254, 3, 2, 2, 2,
	256, 257, 3, 2, 2, 2, 257, 255, 3, 2, 2, 2, 257, 258, 3, 2, 2, 2, 258,
	72, 3, 2, 2, 2, 259, 263, 9, 6, 2, 2, 260, 262, 9, 7, 2, 2, 261, 260, 3,
	2, 2, 2, 262, 265, 3, 2, 2, 2, 263, 261, 3, 2, 2, 2, 263, 264, 3, 2, 2,
	2, 264, 74, 3, 2, 2, 2, 265, 263, 3, 2, 2, 2, 266, 268, 9, 8, 2, 2, 267,
	266, 3, 2, 2, 2, 268, 269, 3, 2, 2, 2, 269, 267, 3, 2, 2, 2, 269, 270,
	3, 2, 2, 2, 270, 271, 3, 2, 2, 2, 271, 272, 8, 38, 2, 2, 272, 76, 3, 2,
	2, 2, 10, 2, 227, 240, 244, 249, 257, 263, 269, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "'<'", "'>'", "'opaque'", "'string'", "'*'", "'void'",
	"'unsigned'", "'int'", "'hyper'", "'float'", "'double'", "'quadruple'",
	"'bool'", "'enum'", "'{'", "'='", "','", "'}'", "'struct'", "';'", "'union'",
	"'switch'", "'('", "')'", "'default'", "':'", "'case'", "'const'", "'typedef'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "COMMENT", "OCTAL",
	"DECIMAL", "HEXADECIMAL", "IDENTIFIER", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
	"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "COMMENT", "OCTAL",
	"DECIMAL", "HEXADECIMAL", "IDENTIFIER", "WS",
}

type xdrLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewxdrLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *xdrLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewxdrLexer(input antlr.CharStream) *xdrLexer {
	l := new(xdrLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "xdr.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// xdrLexer tokens.
const (
	xdrLexerT__0        = 1
	xdrLexerT__1        = 2
	xdrLexerT__2        = 3
	xdrLexerT__3        = 4
	xdrLexerT__4        = 5
	xdrLexerT__5        = 6
	xdrLexerT__6        = 7
	xdrLexerT__7        = 8
	xdrLexerT__8        = 9
	xdrLexerT__9        = 10
	xdrLexerT__10       = 11
	xdrLexerT__11       = 12
	xdrLexerT__12       = 13
	xdrLexerT__13       = 14
	xdrLexerT__14       = 15
	xdrLexerT__15       = 16
	xdrLexerT__16       = 17
	xdrLexerT__17       = 18
	xdrLexerT__18       = 19
	xdrLexerT__19       = 20
	xdrLexerT__20       = 21
	xdrLexerT__21       = 22
	xdrLexerT__22       = 23
	xdrLexerT__23       = 24
	xdrLexerT__24       = 25
	xdrLexerT__25       = 26
	xdrLexerT__26       = 27
	xdrLexerT__27       = 28
	xdrLexerT__28       = 29
	xdrLexerT__29       = 30
	xdrLexerT__30       = 31
	xdrLexerCOMMENT     = 32
	xdrLexerOCTAL       = 33
	xdrLexerDECIMAL     = 34
	xdrLexerHEXADECIMAL = 35
	xdrLexerIDENTIFIER  = 36
	xdrLexerWS          = 37
)
