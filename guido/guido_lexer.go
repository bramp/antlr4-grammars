// Code generated from guido.g4 by ANTLR 4.9.3. DO NOT EDIT.

package guido

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 36, 201,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3,
	5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11,
	3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3,
	16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19,
	3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3,
	21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23,
	3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26,
	3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3,
	28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 6, 31, 171, 10, 31, 13, 31,
	14, 31, 172, 3, 32, 6, 32, 176, 10, 32, 13, 32, 14, 32, 177, 3, 33, 3,
	33, 7, 33, 182, 10, 33, 12, 33, 14, 33, 185, 11, 33, 3, 33, 3, 33, 3, 34,
	3, 34, 7, 34, 191, 10, 34, 12, 34, 14, 34, 194, 11, 34, 3, 34, 3, 34, 3,
	35, 3, 35, 3, 35, 3, 35, 2, 2, 36, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8,
	15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35,
	69, 36, 3, 2, 7, 3, 2, 50, 59, 4, 2, 67, 92, 99, 124, 3, 2, 36, 36, 4,
	2, 12, 12, 15, 15, 5, 2, 11, 12, 15, 15, 34, 34, 2, 204, 2, 3, 3, 2, 2,
	2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2,
	2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2,
	2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3,
	2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35,
	3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2,
	43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2,
	2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2,
	2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2,
	2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 3, 71, 3, 2, 2, 2, 5, 73, 3,
	2, 2, 2, 7, 75, 3, 2, 2, 2, 9, 77, 3, 2, 2, 2, 11, 79, 3, 2, 2, 2, 13,
	81, 3, 2, 2, 2, 15, 83, 3, 2, 2, 2, 17, 85, 3, 2, 2, 2, 19, 87, 3, 2, 2,
	2, 21, 89, 3, 2, 2, 2, 23, 91, 3, 2, 2, 2, 25, 93, 3, 2, 2, 2, 27, 95,
	3, 2, 2, 2, 29, 97, 3, 2, 2, 2, 31, 99, 3, 2, 2, 2, 33, 101, 3, 2, 2, 2,
	35, 103, 3, 2, 2, 2, 37, 105, 3, 2, 2, 2, 39, 111, 3, 2, 2, 2, 41, 117,
	3, 2, 2, 2, 43, 122, 3, 2, 2, 2, 45, 128, 3, 2, 2, 2, 47, 133, 3, 2, 2,
	2, 49, 137, 3, 2, 2, 2, 51, 147, 3, 2, 2, 2, 53, 153, 3, 2, 2, 2, 55, 163,
	3, 2, 2, 2, 57, 165, 3, 2, 2, 2, 59, 167, 3, 2, 2, 2, 61, 170, 3, 2, 2,
	2, 63, 175, 3, 2, 2, 2, 65, 179, 3, 2, 2, 2, 67, 188, 3, 2, 2, 2, 69, 197,
	3, 2, 2, 2, 71, 72, 7, 125, 2, 2, 72, 4, 3, 2, 2, 2, 73, 74, 7, 127, 2,
	2, 74, 6, 3, 2, 2, 2, 75, 76, 7, 46, 2, 2, 76, 8, 3, 2, 2, 2, 77, 78, 7,
	93, 2, 2, 78, 10, 3, 2, 2, 2, 79, 80, 7, 95, 2, 2, 80, 12, 3, 2, 2, 2,
	81, 82, 7, 62, 2, 2, 82, 14, 3, 2, 2, 2, 83, 84, 7, 64, 2, 2, 84, 16, 3,
	2, 2, 2, 85, 86, 7, 63, 2, 2, 86, 18, 3, 2, 2, 2, 87, 88, 7, 42, 2, 2,
	88, 20, 3, 2, 2, 2, 89, 90, 7, 43, 2, 2, 90, 22, 3, 2, 2, 2, 91, 92, 7,
	37, 2, 2, 92, 24, 3, 2, 2, 2, 93, 94, 7, 40, 2, 2, 94, 26, 3, 2, 2, 2,
	95, 96, 7, 47, 2, 2, 96, 28, 3, 2, 2, 2, 97, 98, 7, 45, 2, 2, 98, 30, 3,
	2, 2, 2, 99, 100, 7, 49, 2, 2, 100, 32, 3, 2, 2, 2, 101, 102, 7, 44, 2,
	2, 102, 34, 3, 2, 2, 2, 103, 104, 7, 48, 2, 2, 104, 36, 3, 2, 2, 2, 105,
	106, 7, 118, 2, 2, 106, 107, 7, 107, 2, 2, 107, 108, 7, 118, 2, 2, 108,
	109, 7, 110, 2, 2, 109, 110, 7, 103, 2, 2, 110, 38, 3, 2, 2, 2, 111, 112,
	7, 118, 2, 2, 112, 113, 7, 103, 2, 2, 113, 114, 7, 111, 2, 2, 114, 115,
	7, 114, 2, 2, 115, 116, 7, 113, 2, 2, 116, 40, 3, 2, 2, 2, 117, 118, 7,
	101, 2, 2, 118, 119, 7, 110, 2, 2, 119, 120, 7, 103, 2, 2, 120, 121, 7,
	104, 2, 2, 121, 42, 3, 2, 2, 2, 122, 123, 7, 111, 2, 2, 123, 124, 7, 103,
	2, 2, 124, 125, 7, 118, 2, 2, 125, 126, 7, 103, 2, 2, 126, 127, 7, 116,
	2, 2, 127, 44, 3, 2, 2, 2, 128, 129, 7, 117, 2, 2, 129, 130, 7, 110, 2,
	2, 130, 131, 7, 119, 2, 2, 131, 132, 7, 116, 2, 2, 132, 46, 3, 2, 2, 2,
	133, 134, 7, 109, 2, 2, 134, 135, 7, 103, 2, 2, 135, 136, 7, 123, 2, 2,
	136, 48, 3, 2, 2, 2, 137, 138, 7, 100, 2, 2, 138, 139, 7, 99, 2, 2, 139,
	140, 7, 116, 2, 2, 140, 141, 7, 72, 2, 2, 141, 142, 7, 113, 2, 2, 142,
	143, 7, 116, 2, 2, 143, 144, 7, 111, 2, 2, 144, 145, 7, 99, 2, 2, 145,
	146, 7, 118, 2, 2, 146, 50, 3, 2, 2, 2, 147, 148, 7, 117, 2, 2, 148, 149,
	7, 118, 2, 2, 149, 150, 7, 99, 2, 2, 150, 151, 7, 104, 2, 2, 151, 152,
	7, 104, 2, 2, 152, 52, 3, 2, 2, 2, 153, 154, 7, 116, 2, 2, 154, 155, 7,
	103, 2, 2, 155, 156, 7, 114, 2, 2, 156, 157, 7, 103, 2, 2, 157, 158, 7,
	99, 2, 2, 158, 159, 7, 118, 2, 2, 159, 160, 7, 71, 2, 2, 160, 161, 7, 112,
	2, 2, 161, 162, 7, 102, 2, 2, 162, 54, 3, 2, 2, 2, 163, 164, 7, 118, 2,
	2, 164, 56, 3, 2, 2, 2, 165, 166, 7, 94, 2, 2, 166, 58, 3, 2, 2, 2, 167,
	168, 7, 97, 2, 2, 168, 60, 3, 2, 2, 2, 169, 171, 9, 2, 2, 2, 170, 169,
	3, 2, 2, 2, 171, 172, 3, 2, 2, 2, 172, 170, 3, 2, 2, 2, 172, 173, 3, 2,
	2, 2, 173, 62, 3, 2, 2, 2, 174, 176, 9, 3, 2, 2, 175, 174, 3, 2, 2, 2,
	176, 177, 3, 2, 2, 2, 177, 175, 3, 2, 2, 2, 177, 178, 3, 2, 2, 2, 178,
	64, 3, 2, 2, 2, 179, 183, 7, 36, 2, 2, 180, 182, 10, 4, 2, 2, 181, 180,
	3, 2, 2, 2, 182, 185, 3, 2, 2, 2, 183, 181, 3, 2, 2, 2, 183, 184, 3, 2,
	2, 2, 184, 186, 3, 2, 2, 2, 185, 183, 3, 2, 2, 2, 186, 187, 7, 36, 2, 2,
	187, 66, 3, 2, 2, 2, 188, 192, 7, 39, 2, 2, 189, 191, 10, 5, 2, 2, 190,
	189, 3, 2, 2, 2, 191, 194, 3, 2, 2, 2, 192, 190, 3, 2, 2, 2, 192, 193,
	3, 2, 2, 2, 193, 195, 3, 2, 2, 2, 194, 192, 3, 2, 2, 2, 195, 196, 8, 34,
	2, 2, 196, 68, 3, 2, 2, 2, 197, 198, 9, 6, 2, 2, 198, 199, 3, 2, 2, 2,
	199, 200, 8, 35, 2, 2, 200, 70, 3, 2, 2, 2, 7, 2, 172, 177, 183, 192, 3,
	8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'{'", "'}'", "','", "'['", "']'", "'<'", "'>'", "'='", "'('", "')'",
	"'#'", "'&'", "'-'", "'+'", "'/'", "'*'", "'.'", "'title'", "'tempo'",
	"'clef'", "'meter'", "'slur'", "'key'", "'barFormat'", "'staff'", "'repeatEnd'",
	"'t'", "'\\'", "'_'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "TAGSTART", "REST", "NUMBER", "STRING",
	"STRINGLITERAL", "COMMENT", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
	"T__25", "T__26", "TAGSTART", "REST", "NUMBER", "STRING", "STRINGLITERAL",
	"COMMENT", "WS",
}

type guidoLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewguidoLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *guidoLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewguidoLexer(input antlr.CharStream) *guidoLexer {
	l := new(guidoLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "guido.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// guidoLexer tokens.
const (
	guidoLexerT__0          = 1
	guidoLexerT__1          = 2
	guidoLexerT__2          = 3
	guidoLexerT__3          = 4
	guidoLexerT__4          = 5
	guidoLexerT__5          = 6
	guidoLexerT__6          = 7
	guidoLexerT__7          = 8
	guidoLexerT__8          = 9
	guidoLexerT__9          = 10
	guidoLexerT__10         = 11
	guidoLexerT__11         = 12
	guidoLexerT__12         = 13
	guidoLexerT__13         = 14
	guidoLexerT__14         = 15
	guidoLexerT__15         = 16
	guidoLexerT__16         = 17
	guidoLexerT__17         = 18
	guidoLexerT__18         = 19
	guidoLexerT__19         = 20
	guidoLexerT__20         = 21
	guidoLexerT__21         = 22
	guidoLexerT__22         = 23
	guidoLexerT__23         = 24
	guidoLexerT__24         = 25
	guidoLexerT__25         = 26
	guidoLexerT__26         = 27
	guidoLexerTAGSTART      = 28
	guidoLexerREST          = 29
	guidoLexerNUMBER        = 30
	guidoLexerSTRING        = 31
	guidoLexerSTRINGLITERAL = 32
	guidoLexerCOMMENT       = 33
	guidoLexerWS            = 34
)
