// Code generated from abbLexer.g4 by ANTLR 4.9.3. DO NOT EDIT.

package abb

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 51, 536,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 4, 80, 9, 80, 4,
	81, 9, 81, 4, 82, 9, 82, 4, 83, 9, 83, 4, 84, 9, 84, 4, 85, 9, 85, 4, 86,
	9, 86, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5,
	3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6,
	3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8,
	3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16,
	3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3,
	19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23,
	3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3,
	29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 33,
	3, 33, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3,
	37, 3, 37, 3, 38, 3, 38, 3, 39, 3, 39, 3, 40, 3, 40, 3, 41, 3, 41, 3, 42,
	3, 42, 3, 43, 3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 46, 3, 46, 3, 47, 3,
	47, 3, 48, 3, 48, 3, 49, 3, 49, 3, 50, 3, 50, 3, 51, 3, 51, 3, 52, 3, 52,
	3, 53, 3, 53, 3, 54, 3, 54, 3, 55, 3, 55, 3, 56, 3, 56, 3, 57, 3, 57, 3,
	58, 3, 58, 3, 59, 3, 59, 3, 60, 3, 60, 3, 61, 3, 61, 3, 62, 3, 62, 3, 63,
	3, 63, 3, 64, 3, 64, 3, 65, 3, 65, 3, 66, 3, 66, 3, 67, 3, 67, 3, 68, 3,
	68, 3, 68, 3, 68, 3, 69, 5, 69, 393, 10, 69, 3, 69, 3, 69, 3, 70, 3, 70,
	7, 70, 399, 10, 70, 12, 70, 14, 70, 402, 11, 70, 3, 70, 3, 70, 3, 71, 3,
	71, 3, 71, 3, 71, 3, 71, 3, 71, 3, 71, 3, 71, 3, 71, 3, 71, 3, 71, 5, 71,
	417, 10, 71, 3, 72, 3, 72, 3, 72, 5, 72, 422, 10, 72, 3, 72, 3, 72, 3,
	73, 3, 73, 3, 73, 7, 73, 429, 10, 73, 12, 73, 14, 73, 432, 11, 73, 3, 73,
	3, 73, 3, 74, 3, 74, 3, 74, 3, 74, 3, 74, 3, 74, 3, 74, 3, 74, 5, 74, 444,
	10, 74, 3, 75, 6, 75, 447, 10, 75, 13, 75, 14, 75, 448, 3, 75, 3, 75, 7,
	75, 453, 10, 75, 12, 75, 14, 75, 456, 11, 75, 3, 75, 5, 75, 459, 10, 75,
	3, 75, 3, 75, 6, 75, 463, 10, 75, 13, 75, 14, 75, 464, 3, 75, 5, 75, 468,
	10, 75, 3, 75, 6, 75, 471, 10, 75, 13, 75, 14, 75, 472, 3, 75, 5, 75, 476,
	10, 75, 3, 76, 3, 76, 5, 76, 480, 10, 76, 3, 76, 6, 76, 483, 10, 76, 13,
	76, 14, 76, 484, 3, 77, 6, 77, 488, 10, 77, 13, 77, 14, 77, 489, 3, 77,
	3, 77, 6, 77, 494, 10, 77, 13, 77, 14, 77, 495, 3, 77, 3, 77, 3, 77, 3,
	77, 6, 77, 502, 10, 77, 13, 77, 14, 77, 503, 3, 77, 3, 77, 5, 77, 508,
	10, 77, 3, 78, 3, 78, 3, 78, 3, 79, 3, 79, 3, 80, 3, 80, 3, 81, 3, 81,
	3, 81, 3, 82, 3, 82, 3, 83, 3, 83, 3, 84, 3, 84, 7, 84, 526, 10, 84, 12,
	84, 14, 84, 529, 11, 84, 3, 85, 3, 85, 3, 86, 3, 86, 5, 86, 535, 10, 86,
	2, 2, 87, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11,
	21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20,
	39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29,
	57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38,
	75, 39, 77, 40, 79, 41, 81, 42, 83, 2, 85, 2, 87, 2, 89, 2, 91, 2, 93,
	2, 95, 2, 97, 2, 99, 2, 101, 2, 103, 2, 105, 2, 107, 2, 109, 2, 111, 2,
	113, 2, 115, 2, 117, 2, 119, 2, 121, 2, 123, 2, 125, 2, 127, 2, 129, 2,
	131, 2, 133, 2, 135, 43, 137, 44, 139, 45, 141, 46, 143, 47, 145, 48, 147,
	2, 149, 49, 151, 2, 153, 50, 155, 2, 157, 2, 159, 2, 161, 2, 163, 2, 165,
	2, 167, 51, 169, 2, 171, 2, 3, 2, 36, 4, 2, 67, 67, 99, 99, 4, 2, 68, 68,
	100, 100, 4, 2, 69, 69, 101, 101, 4, 2, 70, 70, 102, 102, 4, 2, 71, 71,
	103, 103, 4, 2, 72, 72, 104, 104, 4, 2, 73, 73, 105, 105, 4, 2, 74, 74,
	106, 106, 4, 2, 75, 75, 107, 107, 4, 2, 76, 76, 108, 108, 4, 2, 77, 77,
	109, 109, 4, 2, 78, 78, 110, 110, 4, 2, 79, 79, 111, 111, 4, 2, 80, 80,
	112, 112, 4, 2, 81, 81, 113, 113, 4, 2, 82, 82, 114, 114, 4, 2, 83, 83,
	115, 115, 4, 2, 84, 84, 116, 116, 4, 2, 85, 85, 117, 117, 4, 2, 86, 86,
	118, 118, 4, 2, 87, 87, 119, 119, 4, 2, 88, 88, 120, 120, 4, 2, 89, 89,
	121, 121, 4, 2, 90, 90, 122, 122, 4, 2, 91, 91, 123, 123, 4, 2, 92, 92,
	124, 124, 5, 2, 11, 11, 14, 14, 34, 34, 4, 2, 12, 12, 15, 15, 6, 2, 12,
	12, 15, 15, 41, 41, 94, 94, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 10, 2,
	36, 36, 41, 41, 94, 94, 100, 100, 104, 104, 112, 112, 116, 116, 118, 118,
	4, 2, 45, 45, 47, 47, 5, 2, 50, 59, 67, 72, 99, 104, 5, 2, 67, 92, 97,
	97, 99, 124, 2, 525, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2,
	39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2,
	2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2,
	2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2,
	2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3,
	2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77,
	3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 135, 3, 2, 2, 2, 2,
	137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2, 141, 3, 2, 2, 2, 2, 143, 3, 2,
	2, 2, 2, 145, 3, 2, 2, 2, 2, 149, 3, 2, 2, 2, 2, 153, 3, 2, 2, 2, 2, 167,
	3, 2, 2, 2, 3, 173, 3, 2, 2, 2, 5, 180, 3, 2, 2, 2, 7, 190, 3, 2, 2, 2,
	9, 195, 3, 2, 2, 2, 11, 203, 3, 2, 2, 2, 13, 209, 3, 2, 2, 2, 15, 215,
	3, 2, 2, 2, 17, 220, 3, 2, 2, 2, 19, 224, 3, 2, 2, 2, 21, 233, 3, 2, 2,
	2, 23, 242, 3, 2, 2, 2, 25, 252, 3, 2, 2, 2, 27, 261, 3, 2, 2, 2, 29, 267,
	3, 2, 2, 2, 31, 272, 3, 2, 2, 2, 33, 276, 3, 2, 2, 2, 35, 281, 3, 2, 2,
	2, 37, 283, 3, 2, 2, 2, 39, 286, 3, 2, 2, 2, 41, 288, 3, 2, 2, 2, 43, 290,
	3, 2, 2, 2, 45, 292, 3, 2, 2, 2, 47, 294, 3, 2, 2, 2, 49, 296, 3, 2, 2,
	2, 51, 298, 3, 2, 2, 2, 53, 300, 3, 2, 2, 2, 55, 302, 3, 2, 2, 2, 57, 304,
	3, 2, 2, 2, 59, 306, 3, 2, 2, 2, 61, 309, 3, 2, 2, 2, 63, 311, 3, 2, 2,
	2, 65, 314, 3, 2, 2, 2, 67, 316, 3, 2, 2, 2, 69, 319, 3, 2, 2, 2, 71, 322,
	3, 2, 2, 2, 73, 325, 3, 2, 2, 2, 75, 327, 3, 2, 2, 2, 77, 329, 3, 2, 2,
	2, 79, 331, 3, 2, 2, 2, 81, 333, 3, 2, 2, 2, 83, 335, 3, 2, 2, 2, 85, 337,
	3, 2, 2, 2, 87, 339, 3, 2, 2, 2, 89, 341, 3, 2, 2, 2, 91, 343, 3, 2, 2,
	2, 93, 345, 3, 2, 2, 2, 95, 347, 3, 2, 2, 2, 97, 349, 3, 2, 2, 2, 99, 351,
	3, 2, 2, 2, 101, 353, 3, 2, 2, 2, 103, 355, 3, 2, 2, 2, 105, 357, 3, 2,
	2, 2, 107, 359, 3, 2, 2, 2, 109, 361, 3, 2, 2, 2, 111, 363, 3, 2, 2, 2,
	113, 365, 3, 2, 2, 2, 115, 367, 3, 2, 2, 2, 117, 369, 3, 2, 2, 2, 119,
	371, 3, 2, 2, 2, 121, 373, 3, 2, 2, 2, 123, 375, 3, 2, 2, 2, 125, 377,
	3, 2, 2, 2, 127, 379, 3, 2, 2, 2, 129, 381, 3, 2, 2, 2, 131, 383, 3, 2,
	2, 2, 133, 385, 3, 2, 2, 2, 135, 387, 3, 2, 2, 2, 137, 392, 3, 2, 2, 2,
	139, 396, 3, 2, 2, 2, 141, 416, 3, 2, 2, 2, 143, 418, 3, 2, 2, 2, 145,
	425, 3, 2, 2, 2, 147, 435, 3, 2, 2, 2, 149, 475, 3, 2, 2, 2, 151, 477,
	3, 2, 2, 2, 153, 507, 3, 2, 2, 2, 155, 509, 3, 2, 2, 2, 157, 512, 3, 2,
	2, 2, 159, 514, 3, 2, 2, 2, 161, 516, 3, 2, 2, 2, 163, 519, 3, 2, 2, 2,
	165, 521, 3, 2, 2, 2, 167, 523, 3, 2, 2, 2, 169, 530, 3, 2, 2, 2, 171,
	534, 3, 2, 2, 2, 173, 174, 7, 111, 2, 2, 174, 175, 7, 113, 2, 2, 175, 176,
	7, 102, 2, 2, 176, 177, 7, 119, 2, 2, 177, 178, 7, 110, 2, 2, 178, 179,
	7, 103, 2, 2, 179, 4, 3, 2, 2, 2, 180, 181, 7, 103, 2, 2, 181, 182, 7,
	112, 2, 2, 182, 183, 7, 102, 2, 2, 183, 184, 7, 111, 2, 2, 184, 185, 7,
	113, 2, 2, 185, 186, 7, 102, 2, 2, 186, 187, 7, 119, 2, 2, 187, 188, 7,
	110, 2, 2, 188, 189, 7, 103, 2, 2, 189, 6, 3, 2, 2, 2, 190, 191, 5, 113,
	57, 2, 191, 192, 5, 117, 59, 2, 192, 193, 5, 111, 56, 2, 193, 194, 5, 87,
	44, 2, 194, 8, 3, 2, 2, 2, 195, 196, 5, 91, 46, 2, 196, 197, 5, 109, 55,
	2, 197, 198, 5, 89, 45, 2, 198, 199, 5, 113, 57, 2, 199, 200, 5, 117, 59,
	2, 200, 201, 5, 111, 56, 2, 201, 202, 5, 87, 44, 2, 202, 10, 3, 2, 2, 2,
	203, 204, 5, 105, 53, 2, 204, 205, 5, 111, 56, 2, 205, 206, 5, 87, 44,
	2, 206, 207, 5, 83, 42, 2, 207, 208, 5, 105, 53, 2, 208, 12, 3, 2, 2, 2,
	209, 210, 5, 87, 44, 2, 210, 211, 5, 111, 56, 2, 211, 212, 5, 109, 55,
	2, 212, 213, 5, 119, 60, 2, 213, 214, 5, 121, 61, 2, 214, 14, 3, 2, 2,
	2, 215, 216, 5, 113, 57, 2, 216, 217, 5, 91, 46, 2, 217, 218, 5, 117, 59,
	2, 218, 219, 5, 119, 60, 2, 219, 16, 3, 2, 2, 2, 220, 221, 5, 125, 63,
	2, 221, 222, 5, 83, 42, 2, 222, 223, 5, 117, 59, 2, 223, 18, 3, 2, 2, 2,
	224, 225, 5, 121, 61, 2, 225, 226, 5, 111, 56, 2, 226, 227, 5, 111, 56,
	2, 227, 228, 5, 105, 53, 2, 228, 229, 5, 89, 45, 2, 229, 230, 5, 83, 42,
	2, 230, 231, 5, 121, 61, 2, 231, 232, 5, 83, 42, 2, 232, 20, 3, 2, 2, 2,
	233, 234, 5, 127, 64, 2, 234, 235, 5, 111, 56, 2, 235, 236, 5, 85, 43,
	2, 236, 237, 5, 101, 51, 2, 237, 238, 5, 89, 45, 2, 238, 239, 5, 83, 42,
	2, 239, 240, 5, 121, 61, 2, 240, 241, 5, 83, 42, 2, 241, 22, 3, 2, 2, 2,
	242, 243, 5, 119, 60, 2, 243, 244, 5, 113, 57, 2, 244, 245, 5, 91, 46,
	2, 245, 246, 5, 91, 46, 2, 246, 247, 5, 89, 45, 2, 247, 248, 5, 89, 45,
	2, 248, 249, 5, 83, 42, 2, 249, 250, 5, 121, 61, 2, 250, 251, 5, 83, 42,
	2, 251, 24, 3, 2, 2, 2, 252, 253, 5, 133, 67, 2, 253, 254, 5, 111, 56,
	2, 254, 255, 5, 109, 55, 2, 255, 256, 5, 91, 46, 2, 256, 257, 5, 89, 45,
	2, 257, 258, 5, 83, 42, 2, 258, 259, 5, 121, 61, 2, 259, 260, 5, 83, 42,
	2, 260, 26, 3, 2, 2, 2, 261, 262, 5, 87, 44, 2, 262, 263, 5, 105, 53, 2,
	263, 264, 5, 111, 56, 2, 264, 265, 5, 87, 44, 2, 265, 266, 5, 103, 52,
	2, 266, 28, 3, 2, 2, 2, 267, 268, 5, 85, 43, 2, 268, 269, 5, 111, 56, 2,
	269, 270, 5, 111, 56, 2, 270, 271, 5, 105, 53, 2, 271, 30, 3, 2, 2, 2,
	272, 273, 7, 94, 2, 2, 273, 274, 5, 111, 56, 2, 274, 275, 5, 109, 55, 2,
	275, 32, 3, 2, 2, 2, 276, 277, 7, 94, 2, 2, 277, 278, 5, 111, 56, 2, 278,
	279, 5, 93, 47, 2, 279, 280, 5, 93, 47, 2, 280, 34, 3, 2, 2, 2, 281, 282,
	7, 49, 2, 2, 282, 36, 3, 2, 2, 2, 283, 284, 7, 60, 2, 2, 284, 285, 7, 63,
	2, 2, 285, 38, 3, 2, 2, 2, 286, 287, 7, 46, 2, 2, 287, 40, 3, 2, 2, 2,
	288, 289, 7, 125, 2, 2, 289, 42, 3, 2, 2, 2, 290, 291, 7, 127, 2, 2, 291,
	44, 3, 2, 2, 2, 292, 293, 7, 60, 2, 2, 293, 46, 3, 2, 2, 2, 294, 295, 7,
	61, 2, 2, 295, 48, 3, 2, 2, 2, 296, 297, 7, 42, 2, 2, 297, 50, 3, 2, 2,
	2, 298, 299, 7, 43, 2, 2, 299, 52, 3, 2, 2, 2, 300, 301, 7, 93, 2, 2, 301,
	54, 3, 2, 2, 2, 302, 303, 7, 95, 2, 2, 303, 56, 3, 2, 2, 2, 304, 305, 7,
	48, 2, 2, 305, 58, 3, 2, 2, 2, 306, 307, 7, 48, 2, 2, 307, 308, 7, 48,
	2, 2, 308, 60, 3, 2, 2, 2, 309, 310, 7, 64, 2, 2, 310, 62, 3, 2, 2, 2,
	311, 312, 7, 64, 2, 2, 312, 313, 7, 63, 2, 2, 313, 64, 3, 2, 2, 2, 314,
	315, 7, 62, 2, 2, 315, 66, 3, 2, 2, 2, 316, 317, 7, 62, 2, 2, 317, 318,
	7, 63, 2, 2, 318, 68, 3, 2, 2, 2, 319, 320, 7, 63, 2, 2, 320, 321, 7, 63,
	2, 2, 321, 70, 3, 2, 2, 2, 322, 323, 7, 62, 2, 2, 323, 324, 7, 64, 2, 2,
	324, 72, 3, 2, 2, 2, 325, 326, 7, 45, 2, 2, 326, 74, 3, 2, 2, 2, 327, 328,
	7, 47, 2, 2, 328, 76, 3, 2, 2, 2, 329, 330, 7, 44, 2, 2, 330, 78, 3, 2,
	2, 2, 331, 332, 7, 39, 2, 2, 332, 80, 3, 2, 2, 2, 333, 334, 7, 37, 2, 2,
	334, 82, 3, 2, 2, 2, 335, 336, 9, 2, 2, 2, 336, 84, 3, 2, 2, 2, 337, 338,
	9, 3, 2, 2, 338, 86, 3, 2, 2, 2, 339, 340, 9, 4, 2, 2, 340, 88, 3, 2, 2,
	2, 341, 342, 9, 5, 2, 2, 342, 90, 3, 2, 2, 2, 343, 344, 9, 6, 2, 2, 344,
	92, 3, 2, 2, 2, 345, 346, 9, 7, 2, 2, 346, 94, 3, 2, 2, 2, 347, 348, 9,
	8, 2, 2, 348, 96, 3, 2, 2, 2, 349, 350, 9, 9, 2, 2, 350, 98, 3, 2, 2, 2,
	351, 352, 9, 10, 2, 2, 352, 100, 3, 2, 2, 2, 353, 354, 9, 11, 2, 2, 354,
	102, 3, 2, 2, 2, 355, 356, 9, 12, 2, 2, 356, 104, 3, 2, 2, 2, 357, 358,
	9, 13, 2, 2, 358, 106, 3, 2, 2, 2, 359, 360, 9, 14, 2, 2, 360, 108, 3,
	2, 2, 2, 361, 362, 9, 15, 2, 2, 362, 110, 3, 2, 2, 2, 363, 364, 9, 16,
	2, 2, 364, 112, 3, 2, 2, 2, 365, 366, 9, 17, 2, 2, 366, 114, 3, 2, 2, 2,
	367, 368, 9, 18, 2, 2, 368, 116, 3, 2, 2, 2, 369, 370, 9, 19, 2, 2, 370,
	118, 3, 2, 2, 2, 371, 372, 9, 20, 2, 2, 372, 120, 3, 2, 2, 2, 373, 374,
	9, 21, 2, 2, 374, 122, 3, 2, 2, 2, 375, 376, 9, 22, 2, 2, 376, 124, 3,
	2, 2, 2, 377, 378, 9, 23, 2, 2, 378, 126, 3, 2, 2, 2, 379, 380, 9, 24,
	2, 2, 380, 128, 3, 2, 2, 2, 381, 382, 9, 25, 2, 2, 382, 130, 3, 2, 2, 2,
	383, 384, 9, 26, 2, 2, 384, 132, 3, 2, 2, 2, 385, 386, 9, 27, 2, 2, 386,
	134, 3, 2, 2, 2, 387, 388, 9, 28, 2, 2, 388, 389, 3, 2, 2, 2, 389, 390,
	8, 68, 2, 2, 390, 136, 3, 2, 2, 2, 391, 393, 7, 15, 2, 2, 392, 391, 3,
	2, 2, 2, 392, 393, 3, 2, 2, 2, 393, 394, 3, 2, 2, 2, 394, 395, 7, 12, 2,
	2, 395, 138, 3, 2, 2, 2, 396, 400, 7, 35, 2, 2, 397, 399, 10, 29, 2, 2,
	398, 397, 3, 2, 2, 2, 399, 402, 3, 2, 2, 2, 400, 398, 3, 2, 2, 2, 400,
	401, 3, 2, 2, 2, 401, 403, 3, 2, 2, 2, 402, 400, 3, 2, 2, 2, 403, 404,
	8, 70, 2, 2, 404, 140, 3, 2, 2, 2, 405, 406, 5, 93, 47, 2, 406, 407, 5,
	83, 42, 2, 407, 408, 5, 105, 53, 2, 408, 409, 5, 119, 60, 2, 409, 410,
	5, 91, 46, 2, 410, 417, 3, 2, 2, 2, 411, 412, 5, 121, 61, 2, 412, 413,
	5, 117, 59, 2, 413, 414, 5, 123, 62, 2, 414, 415, 5, 91, 46, 2, 415, 417,
	3, 2, 2, 2, 416, 405, 3, 2, 2, 2, 416, 411, 3, 2, 2, 2, 417, 142, 3, 2,
	2, 2, 418, 421, 7, 41, 2, 2, 419, 422, 5, 147, 74, 2, 420, 422, 10, 30,
	2, 2, 421, 419, 3, 2, 2, 2, 421, 420, 3, 2, 2, 2, 422, 423, 3, 2, 2, 2,
	423, 424, 7, 41, 2, 2, 424, 144, 3, 2, 2, 2, 425, 430, 7, 36, 2, 2, 426,
	429, 5, 147, 74, 2, 427, 429, 10, 31, 2, 2, 428, 426, 3, 2, 2, 2, 428,
	427, 3, 2, 2, 2, 429, 432, 3, 2, 2, 2, 430, 428, 3, 2, 2, 2, 430, 431,
	3, 2, 2, 2, 431, 433, 3, 2, 2, 2, 432, 430, 3, 2, 2, 2, 433, 434, 7, 36,
	2, 2, 434, 146, 3, 2, 2, 2, 435, 443, 7, 94, 2, 2, 436, 444, 9, 32, 2,
	2, 437, 438, 4, 50, 53, 2, 438, 439, 4, 50, 57, 2, 439, 444, 4, 50, 57,
	2, 440, 441, 4, 50, 57, 2, 441, 444, 4, 50, 57, 2, 442, 444, 4, 50, 57,
	2, 443, 436, 3, 2, 2, 2, 443, 437, 3, 2, 2, 2, 443, 440, 3, 2, 2, 2, 443,
	442, 3, 2, 2, 2, 444, 148, 3, 2, 2, 2, 445, 447, 4, 50, 59, 2, 446, 445,
	3, 2, 2, 2, 447, 448, 3, 2, 2, 2, 448, 446, 3, 2, 2, 2, 448, 449, 3, 2,
	2, 2, 449, 450, 3, 2, 2, 2, 450, 454, 7, 48, 2, 2, 451, 453, 4, 50, 59,
	2, 452, 451, 3, 2, 2, 2, 453, 456, 3, 2, 2, 2, 454, 452, 3, 2, 2, 2, 454,
	455, 3, 2, 2, 2, 455, 458, 3, 2, 2, 2, 456, 454, 3, 2, 2, 2, 457, 459,
	5, 151, 76, 2, 458, 457, 3, 2, 2, 2, 458, 459, 3, 2, 2, 2, 459, 476, 3,
	2, 2, 2, 460, 462, 7, 48, 2, 2, 461, 463, 4, 50, 59, 2, 462, 461, 3, 2,
	2, 2, 463, 464, 3, 2, 2, 2, 464, 462, 3, 2, 2, 2, 464, 465, 3, 2, 2, 2,
	465, 467, 3, 2, 2, 2, 466, 468, 5, 151, 76, 2, 467, 466, 3, 2, 2, 2, 467,
	468, 3, 2, 2, 2, 468, 476, 3, 2, 2, 2, 469, 471, 4, 50, 59, 2, 470, 469,
	3, 2, 2, 2, 471, 472, 3, 2, 2, 2, 472, 470, 3, 2, 2, 2, 472, 473, 3, 2,
	2, 2, 473, 474, 3, 2, 2, 2, 474, 476, 5, 151, 76, 2, 475, 446, 3, 2, 2,
	2, 475, 460, 3, 2, 2, 2, 475, 470, 3, 2, 2, 2, 476, 150, 3, 2, 2, 2, 477,
	479, 5, 91, 46, 2, 478, 480, 9, 33, 2, 2, 479, 478, 3, 2, 2, 2, 479, 480,
	3, 2, 2, 2, 480, 482, 3, 2, 2, 2, 481, 483, 4, 50, 59, 2, 482, 481, 3,
	2, 2, 2, 483, 484, 3, 2, 2, 2, 484, 482, 3, 2, 2, 2, 484, 485, 3, 2, 2,
	2, 485, 152, 3, 2, 2, 2, 486, 488, 4, 50, 59, 2, 487, 486, 3, 2, 2, 2,
	488, 489, 3, 2, 2, 2, 489, 487, 3, 2, 2, 2, 489, 490, 3, 2, 2, 2, 490,
	508, 3, 2, 2, 2, 491, 493, 5, 155, 78, 2, 492, 494, 5, 157, 79, 2, 493,
	492, 3, 2, 2, 2, 494, 495, 3, 2, 2, 2, 495, 493, 3, 2, 2, 2, 495, 496,
	3, 2, 2, 2, 496, 497, 3, 2, 2, 2, 497, 498, 5, 159, 80, 2, 498, 508, 3,
	2, 2, 2, 499, 501, 5, 161, 81, 2, 500, 502, 5, 163, 82, 2, 501, 500, 3,
	2, 2, 2, 502, 503, 3, 2, 2, 2, 503, 501, 3, 2, 2, 2, 503, 504, 3, 2, 2,
	2, 504, 505, 3, 2, 2, 2, 505, 506, 5, 165, 83, 2, 506, 508, 3, 2, 2, 2,
	507, 487, 3, 2, 2, 2, 507, 491, 3, 2, 2, 2, 507, 499, 3, 2, 2, 2, 508,
	154, 3, 2, 2, 2, 509, 510, 7, 41, 2, 2, 510, 511, 5, 97, 49, 2, 511, 156,
	3, 2, 2, 2, 512, 513, 9, 34, 2, 2, 513, 158, 3, 2, 2, 2, 514, 515, 7, 41,
	2, 2, 515, 160, 3, 2, 2, 2, 516, 517, 7, 41, 2, 2, 517, 518, 5, 85, 43,
	2, 518, 162, 3, 2, 2, 2, 519, 520, 4, 50, 51, 2, 520, 164, 3, 2, 2, 2,
	521, 522, 7, 41, 2, 2, 522, 166, 3, 2, 2, 2, 523, 527, 5, 169, 85, 2, 524,
	526, 5, 171, 86, 2, 525, 524, 3, 2, 2, 2, 526, 529, 3, 2, 2, 2, 527, 525,
	3, 2, 2, 2, 527, 528, 3, 2, 2, 2, 528, 168, 3, 2, 2, 2, 529, 527, 3, 2,
	2, 2, 530, 531, 9, 35, 2, 2, 531, 170, 3, 2, 2, 2, 532, 535, 5, 169, 85,
	2, 533, 535, 4, 50, 59, 2, 534, 532, 3, 2, 2, 2, 534, 533, 3, 2, 2, 2,
	535, 172, 3, 2, 2, 2, 25, 2, 392, 400, 416, 421, 428, 430, 443, 448, 454,
	458, 464, 467, 472, 475, 479, 484, 489, 495, 503, 507, 527, 534, 3, 8,
	2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'module'", "'endmodule'", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "'/'", "':='", "','", "'{'", "'}'", "':'", "';'", "'('",
	"')'", "'['", "']'", "'.'", "'..'", "'>'", "'>='", "'<'", "'<='", "'=='",
	"'<>'", "'+'", "'-'", "'*'", "'%'", "'#'",
}

var lexerSymbolicNames = []string{
	"", "MODULE", "ENDMODULE", "PROC", "ENDPROC", "LOCAL", "CONST", "PERS",
	"VAR", "TOOLDATA", "WOBJDATA", "SPEEDDATA", "ZONEDATA", "CLOCK", "BOOL",
	"ON_CALL", "OFF_CALL", "SLASH", "EQUALS", "COMMA", "CURLY_OPEN", "CURLY_CLOSE",
	"COLON", "SEMICOLON", "BRACKET_OPEN", "BRACKET_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSE",
	"DOT", "DOUBLEDOT", "REL_BIGGER", "REL_BIGGER_OR_EQUAL", "REL_SMALLER",
	"REL_SMALLER_OR_EQUAL", "REL_EQUAL", "REL_NOTEQUAL", "PLUS", "MINUS", "MULTIPLY",
	"PERCENT", "HASH", "WS", "NEWLINE", "LINE_COMMENT", "BOOLLITERAL", "CHARLITERAL",
	"STRINGLITERAL", "FLOATLITERAL", "INTLITERAL", "IDENTIFIER",
}

var lexerRuleNames = []string{
	"MODULE", "ENDMODULE", "PROC", "ENDPROC", "LOCAL", "CONST", "PERS", "VAR",
	"TOOLDATA", "WOBJDATA", "SPEEDDATA", "ZONEDATA", "CLOCK", "BOOL", "ON_CALL",
	"OFF_CALL", "SLASH", "EQUALS", "COMMA", "CURLY_OPEN", "CURLY_CLOSE", "COLON",
	"SEMICOLON", "BRACKET_OPEN", "BRACKET_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSE",
	"DOT", "DOUBLEDOT", "REL_BIGGER", "REL_BIGGER_OR_EQUAL", "REL_SMALLER",
	"REL_SMALLER_OR_EQUAL", "REL_EQUAL", "REL_NOTEQUAL", "PLUS", "MINUS", "MULTIPLY",
	"PERCENT", "HASH", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K",
	"L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
	"WS", "NEWLINE", "LINE_COMMENT", "BOOLLITERAL", "CHARLITERAL", "STRINGLITERAL",
	"EscapeSequence", "FLOATLITERAL", "Exponent", "INTLITERAL", "HexPrefix",
	"HexDigit", "HexSuffix", "BinPrefix", "BinDigit", "BinSuffix", "IDENTIFIER",
	"IdentifierStart", "IdentifierPart",
}

type abbLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewabbLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *abbLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewabbLexer(input antlr.CharStream) *abbLexer {
	l := new(abbLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "abbLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// abbLexer tokens.
const (
	abbLexerMODULE               = 1
	abbLexerENDMODULE            = 2
	abbLexerPROC                 = 3
	abbLexerENDPROC              = 4
	abbLexerLOCAL                = 5
	abbLexerCONST                = 6
	abbLexerPERS                 = 7
	abbLexerVAR                  = 8
	abbLexerTOOLDATA             = 9
	abbLexerWOBJDATA             = 10
	abbLexerSPEEDDATA            = 11
	abbLexerZONEDATA             = 12
	abbLexerCLOCK                = 13
	abbLexerBOOL                 = 14
	abbLexerON_CALL              = 15
	abbLexerOFF_CALL             = 16
	abbLexerSLASH                = 17
	abbLexerEQUALS               = 18
	abbLexerCOMMA                = 19
	abbLexerCURLY_OPEN           = 20
	abbLexerCURLY_CLOSE          = 21
	abbLexerCOLON                = 22
	abbLexerSEMICOLON            = 23
	abbLexerBRACKET_OPEN         = 24
	abbLexerBRACKET_CLOSE        = 25
	abbLexerSQUARE_OPEN          = 26
	abbLexerSQUARE_CLOSE         = 27
	abbLexerDOT                  = 28
	abbLexerDOUBLEDOT            = 29
	abbLexerREL_BIGGER           = 30
	abbLexerREL_BIGGER_OR_EQUAL  = 31
	abbLexerREL_SMALLER          = 32
	abbLexerREL_SMALLER_OR_EQUAL = 33
	abbLexerREL_EQUAL            = 34
	abbLexerREL_NOTEQUAL         = 35
	abbLexerPLUS                 = 36
	abbLexerMINUS                = 37
	abbLexerMULTIPLY             = 38
	abbLexerPERCENT              = 39
	abbLexerHASH                 = 40
	abbLexerWS                   = 41
	abbLexerNEWLINE              = 42
	abbLexerLINE_COMMENT         = 43
	abbLexerBOOLLITERAL          = 44
	abbLexerCHARLITERAL          = 45
	abbLexerSTRINGLITERAL        = 46
	abbLexerFLOATLITERAL         = 47
	abbLexerINTLITERAL           = 48
	abbLexerIDENTIFIER           = 49
)
