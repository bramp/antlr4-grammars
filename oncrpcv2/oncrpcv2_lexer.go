// Code generated from oncrpcv2.g4 by ANTLR 4.9.3. DO NOT EDIT.

package oncrpcv2

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 41, 293,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7,
	3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3,
	11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15,
	3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19,
	3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3,
	21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22,
	3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3,
	27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29,
	3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3,
	30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33,
	3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3,
	34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 7, 35, 246, 10, 35, 12, 35,
	14, 35, 249, 11, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3,
	36, 7, 36, 259, 10, 36, 12, 36, 14, 36, 262, 11, 36, 3, 37, 5, 37, 265,
	10, 37, 3, 37, 6, 37, 268, 10, 37, 13, 37, 14, 37, 269, 3, 38, 3, 38, 3,
	38, 3, 38, 6, 38, 276, 10, 38, 13, 38, 14, 38, 277, 3, 39, 3, 39, 7, 39,
	282, 10, 39, 12, 39, 14, 39, 285, 11, 39, 3, 40, 6, 40, 288, 10, 40, 13,
	40, 14, 40, 289, 3, 40, 3, 40, 3, 247, 2, 41, 3, 3, 5, 4, 7, 5, 9, 6, 11,
	7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16,
	31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25,
	49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34,
	67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 3, 2, 9, 3, 2,
	51, 57, 3, 2, 50, 57, 3, 2, 50, 59, 5, 2, 50, 59, 67, 72, 99, 104, 4, 2,
	67, 92, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 5, 2, 11, 12, 15,
	15, 34, 34, 2, 299, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2,
	39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2,
	2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2,
	2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2,
	2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3,
	2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77,
	3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 3, 81, 3, 2, 2, 2, 5, 89, 3, 2, 2, 2, 7,
	91, 3, 2, 2, 2, 9, 93, 3, 2, 2, 2, 11, 95, 3, 2, 2, 2, 13, 97, 3, 2, 2,
	2, 15, 105, 3, 2, 2, 2, 17, 107, 3, 2, 2, 2, 19, 109, 3, 2, 2, 2, 21, 111,
	3, 2, 2, 2, 23, 116, 3, 2, 2, 2, 25, 118, 3, 2, 2, 2, 27, 120, 3, 2, 2,
	2, 29, 122, 3, 2, 2, 2, 31, 124, 3, 2, 2, 2, 33, 131, 3, 2, 2, 2, 35, 138,
	3, 2, 2, 2, 37, 140, 3, 2, 2, 2, 39, 149, 3, 2, 2, 2, 41, 153, 3, 2, 2,
	2, 43, 159, 3, 2, 2, 2, 45, 165, 3, 2, 2, 2, 47, 172, 3, 2, 2, 2, 49, 182,
	3, 2, 2, 2, 51, 187, 3, 2, 2, 2, 53, 192, 3, 2, 2, 2, 55, 199, 3, 2, 2,
	2, 57, 205, 3, 2, 2, 2, 59, 212, 3, 2, 2, 2, 61, 220, 3, 2, 2, 2, 63, 222,
	3, 2, 2, 2, 65, 227, 3, 2, 2, 2, 67, 233, 3, 2, 2, 2, 69, 241, 3, 2, 2,
	2, 71, 255, 3, 2, 2, 2, 73, 264, 3, 2, 2, 2, 75, 271, 3, 2, 2, 2, 77, 279,
	3, 2, 2, 2, 79, 287, 3, 2, 2, 2, 81, 82, 7, 114, 2, 2, 82, 83, 7, 116,
	2, 2, 83, 84, 7, 113, 2, 2, 84, 85, 7, 105, 2, 2, 85, 86, 7, 116, 2, 2,
	86, 87, 7, 99, 2, 2, 87, 88, 7, 111, 2, 2, 88, 4, 3, 2, 2, 2, 89, 90, 7,
	125, 2, 2, 90, 6, 3, 2, 2, 2, 91, 92, 7, 127, 2, 2, 92, 8, 3, 2, 2, 2,
	93, 94, 7, 63, 2, 2, 94, 10, 3, 2, 2, 2, 95, 96, 7, 61, 2, 2, 96, 12, 3,
	2, 2, 2, 97, 98, 7, 120, 2, 2, 98, 99, 7, 103, 2, 2, 99, 100, 7, 116, 2,
	2, 100, 101, 7, 117, 2, 2, 101, 102, 7, 107, 2, 2, 102, 103, 7, 113, 2,
	2, 103, 104, 7, 112, 2, 2, 104, 14, 3, 2, 2, 2, 105, 106, 7, 42, 2, 2,
	106, 16, 3, 2, 2, 2, 107, 108, 7, 46, 2, 2, 108, 18, 3, 2, 2, 2, 109, 110,
	7, 43, 2, 2, 110, 20, 3, 2, 2, 2, 111, 112, 7, 120, 2, 2, 112, 113, 7,
	113, 2, 2, 113, 114, 7, 107, 2, 2, 114, 115, 7, 102, 2, 2, 115, 22, 3,
	2, 2, 2, 116, 117, 7, 93, 2, 2, 117, 24, 3, 2, 2, 2, 118, 119, 7, 95, 2,
	2, 119, 26, 3, 2, 2, 2, 120, 121, 7, 62, 2, 2, 121, 28, 3, 2, 2, 2, 122,
	123, 7, 64, 2, 2, 123, 30, 3, 2, 2, 2, 124, 125, 7, 113, 2, 2, 125, 126,
	7, 114, 2, 2, 126, 127, 7, 99, 2, 2, 127, 128, 7, 115, 2, 2, 128, 129,
	7, 119, 2, 2, 129, 130, 7, 103, 2, 2, 130, 32, 3, 2, 2, 2, 131, 132, 7,
	117, 2, 2, 132, 133, 7, 118, 2, 2, 133, 134, 7, 116, 2, 2, 134, 135, 7,
	107, 2, 2, 135, 136, 7, 112, 2, 2, 136, 137, 7, 105, 2, 2, 137, 34, 3,
	2, 2, 2, 138, 139, 7, 44, 2, 2, 139, 36, 3, 2, 2, 2, 140, 141, 7, 119,
	2, 2, 141, 142, 7, 112, 2, 2, 142, 143, 7, 117, 2, 2, 143, 144, 7, 107,
	2, 2, 144, 145, 7, 105, 2, 2, 145, 146, 7, 112, 2, 2, 146, 147, 7, 103,
	2, 2, 147, 148, 7, 102, 2, 2, 148, 38, 3, 2, 2, 2, 149, 150, 7, 107, 2,
	2, 150, 151, 7, 112, 2, 2, 151, 152, 7, 118, 2, 2, 152, 40, 3, 2, 2, 2,
	153, 154, 7, 106, 2, 2, 154, 155, 7, 123, 2, 2, 155, 156, 7, 114, 2, 2,
	156, 157, 7, 103, 2, 2, 157, 158, 7, 116, 2, 2, 158, 42, 3, 2, 2, 2, 159,
	160, 7, 104, 2, 2, 160, 161, 7, 110, 2, 2, 161, 162, 7, 113, 2, 2, 162,
	163, 7, 99, 2, 2, 163, 164, 7, 118, 2, 2, 164, 44, 3, 2, 2, 2, 165, 166,
	7, 102, 2, 2, 166, 167, 7, 113, 2, 2, 167, 168, 7, 119, 2, 2, 168, 169,
	7, 100, 2, 2, 169, 170, 7, 110, 2, 2, 170, 171, 7, 103, 2, 2, 171, 46,
	3, 2, 2, 2, 172, 173, 7, 115, 2, 2, 173, 174, 7, 119, 2, 2, 174, 175, 7,
	99, 2, 2, 175, 176, 7, 102, 2, 2, 176, 177, 7, 116, 2, 2, 177, 178, 7,
	119, 2, 2, 178, 179, 7, 114, 2, 2, 179, 180, 7, 110, 2, 2, 180, 181, 7,
	103, 2, 2, 181, 48, 3, 2, 2, 2, 182, 183, 7, 100, 2, 2, 183, 184, 7, 113,
	2, 2, 184, 185, 7, 113, 2, 2, 185, 186, 7, 110, 2, 2, 186, 50, 3, 2, 2,
	2, 187, 188, 7, 103, 2, 2, 188, 189, 7, 112, 2, 2, 189, 190, 7, 119, 2,
	2, 190, 191, 7, 111, 2, 2, 191, 52, 3, 2, 2, 2, 192, 193, 7, 117, 2, 2,
	193, 194, 7, 118, 2, 2, 194, 195, 7, 116, 2, 2, 195, 196, 7, 119, 2, 2,
	196, 197, 7, 101, 2, 2, 197, 198, 7, 118, 2, 2, 198, 54, 3, 2, 2, 2, 199,
	200, 7, 119, 2, 2, 200, 201, 7, 112, 2, 2, 201, 202, 7, 107, 2, 2, 202,
	203, 7, 113, 2, 2, 203, 204, 7, 112, 2, 2, 204, 56, 3, 2, 2, 2, 205, 206,
	7, 117, 2, 2, 206, 207, 7, 121, 2, 2, 207, 208, 7, 107, 2, 2, 208, 209,
	7, 118, 2, 2, 209, 210, 7, 101, 2, 2, 210, 211, 7, 106, 2, 2, 211, 58,
	3, 2, 2, 2, 212, 213, 7, 102, 2, 2, 213, 214, 7, 103, 2, 2, 214, 215, 7,
	104, 2, 2, 215, 216, 7, 99, 2, 2, 216, 217, 7, 119, 2, 2, 217, 218, 7,
	110, 2, 2, 218, 219, 7, 118, 2, 2, 219, 60, 3, 2, 2, 2, 220, 221, 7, 60,
	2, 2, 221, 62, 3, 2, 2, 2, 222, 223, 7, 101, 2, 2, 223, 224, 7, 99, 2,
	2, 224, 225, 7, 117, 2, 2, 225, 226, 7, 103, 2, 2, 226, 64, 3, 2, 2, 2,
	227, 228, 7, 101, 2, 2, 228, 229, 7, 113, 2, 2, 229, 230, 7, 112, 2, 2,
	230, 231, 7, 117, 2, 2, 231, 232, 7, 118, 2, 2, 232, 66, 3, 2, 2, 2, 233,
	234, 7, 118, 2, 2, 234, 235, 7, 123, 2, 2, 235, 236, 7, 114, 2, 2, 236,
	237, 7, 103, 2, 2, 237, 238, 7, 102, 2, 2, 238, 239, 7, 103, 2, 2, 239,
	240, 7, 104, 2, 2, 240, 68, 3, 2, 2, 2, 241, 242, 7, 49, 2, 2, 242, 243,
	7, 44, 2, 2, 243, 247, 3, 2, 2, 2, 244, 246, 11, 2, 2, 2, 245, 244, 3,
	2, 2, 2, 246, 249, 3, 2, 2, 2, 247, 248, 3, 2, 2, 2, 247, 245, 3, 2, 2,
	2, 248, 250, 3, 2, 2, 2, 249, 247, 3, 2, 2, 2, 250, 251, 7, 44, 2, 2, 251,
	252, 7, 49, 2, 2, 252, 253, 3, 2, 2, 2, 253, 254, 8, 35, 2, 2, 254, 70,
	3, 2, 2, 2, 255, 256, 7, 50, 2, 2, 256, 260, 9, 2, 2, 2, 257, 259, 9, 3,
	2, 2, 258, 257, 3, 2, 2, 2, 259, 262, 3, 2, 2, 2, 260, 258, 3, 2, 2, 2,
	260, 261, 3, 2, 2, 2, 261, 72, 3, 2, 2, 2, 262, 260, 3, 2, 2, 2, 263, 265,
	7, 47, 2, 2, 264, 263, 3, 2, 2, 2, 264, 265, 3, 2, 2, 2, 265, 267, 3, 2,
	2, 2, 266, 268, 9, 4, 2, 2, 267, 266, 3, 2, 2, 2, 268, 269, 3, 2, 2, 2,
	269, 267, 3, 2, 2, 2, 269, 270, 3, 2, 2, 2, 270, 74, 3, 2, 2, 2, 271, 272,
	7, 50, 2, 2, 272, 273, 7, 122, 2, 2, 273, 275, 3, 2, 2, 2, 274, 276, 9,
	5, 2, 2, 275, 274, 3, 2, 2, 2, 276, 277, 3, 2, 2, 2, 277, 275, 3, 2, 2,
	2, 277, 278, 3, 2, 2, 2, 278, 76, 3, 2, 2, 2, 279, 283, 9, 6, 2, 2, 280,
	282, 9, 7, 2, 2, 281, 280, 3, 2, 2, 2, 282, 285, 3, 2, 2, 2, 283, 281,
	3, 2, 2, 2, 283, 284, 3, 2, 2, 2, 284, 78, 3, 2, 2, 2, 285, 283, 3, 2,
	2, 2, 286, 288, 9, 8, 2, 2, 287, 286, 3, 2, 2, 2, 288, 289, 3, 2, 2, 2,
	289, 287, 3, 2, 2, 2, 289, 290, 3, 2, 2, 2, 290, 291, 3, 2, 2, 2, 291,
	292, 8, 40, 2, 2, 292, 80, 3, 2, 2, 2, 10, 2, 247, 260, 264, 269, 277,
	283, 289, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'program'", "'{'", "'}'", "'='", "';'", "'version'", "'('", "','",
	"')'", "'void'", "'['", "']'", "'<'", "'>'", "'opaque'", "'string'", "'*'",
	"'unsigned'", "'int'", "'hyper'", "'float'", "'double'", "'quadruple'",
	"'bool'", "'enum'", "'struct'", "'union'", "'switch'", "'default'", "':'",
	"'case'", "'const'", "'typedef'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "COMMENT",
	"OCTAL", "DECIMAL", "HEXADECIMAL", "IDENTIFIER", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
	"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
	"COMMENT", "OCTAL", "DECIMAL", "HEXADECIMAL", "IDENTIFIER", "WS",
}

type oncrpcv2Lexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// Newoncrpcv2Lexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *oncrpcv2Lexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func Newoncrpcv2Lexer(input antlr.CharStream) *oncrpcv2Lexer {
	l := new(oncrpcv2Lexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "oncrpcv2.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// oncrpcv2Lexer tokens.
const (
	oncrpcv2LexerT__0        = 1
	oncrpcv2LexerT__1        = 2
	oncrpcv2LexerT__2        = 3
	oncrpcv2LexerT__3        = 4
	oncrpcv2LexerT__4        = 5
	oncrpcv2LexerT__5        = 6
	oncrpcv2LexerT__6        = 7
	oncrpcv2LexerT__7        = 8
	oncrpcv2LexerT__8        = 9
	oncrpcv2LexerT__9        = 10
	oncrpcv2LexerT__10       = 11
	oncrpcv2LexerT__11       = 12
	oncrpcv2LexerT__12       = 13
	oncrpcv2LexerT__13       = 14
	oncrpcv2LexerT__14       = 15
	oncrpcv2LexerT__15       = 16
	oncrpcv2LexerT__16       = 17
	oncrpcv2LexerT__17       = 18
	oncrpcv2LexerT__18       = 19
	oncrpcv2LexerT__19       = 20
	oncrpcv2LexerT__20       = 21
	oncrpcv2LexerT__21       = 22
	oncrpcv2LexerT__22       = 23
	oncrpcv2LexerT__23       = 24
	oncrpcv2LexerT__24       = 25
	oncrpcv2LexerT__25       = 26
	oncrpcv2LexerT__26       = 27
	oncrpcv2LexerT__27       = 28
	oncrpcv2LexerT__28       = 29
	oncrpcv2LexerT__29       = 30
	oncrpcv2LexerT__30       = 31
	oncrpcv2LexerT__31       = 32
	oncrpcv2LexerT__32       = 33
	oncrpcv2LexerCOMMENT     = 34
	oncrpcv2LexerOCTAL       = 35
	oncrpcv2LexerDECIMAL     = 36
	oncrpcv2LexerHEXADECIMAL = 37
	oncrpcv2LexerIDENTIFIER  = 38
	oncrpcv2LexerWS          = 39
)
